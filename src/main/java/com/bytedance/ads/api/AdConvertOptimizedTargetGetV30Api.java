/*
 * Oceanengine Open Api
 * 巨量引擎开放平台 Open Api
 *
 * The version of the OpenAPI document: 1.1.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bytedance.ads.api;

import com.bytedance.ads.ApiCallback;
import com.bytedance.ads.ApiClient;
import com.bytedance.ads.ApiException;
import com.bytedance.ads.ApiResponse;
import com.bytedance.ads.Configuration;
import com.bytedance.ads.Pair;

import com.google.gson.reflect.TypeToken;



import com.bytedance.ads.model.AdConvertOptimizedTargetGetV30AdType;
import com.bytedance.ads.model.AdConvertOptimizedTargetGetV30AppType;
import com.bytedance.ads.model.AdConvertOptimizedTargetGetV30ConvertTracking;
import com.bytedance.ads.model.AdConvertOptimizedTargetGetV30DeliveryRange;
import com.bytedance.ads.model.AdConvertOptimizedTargetGetV30LandingType;
import com.bytedance.ads.model.AdConvertOptimizedTargetGetV30MarketingPurpose;
import com.bytedance.ads.model.AdConvertOptimizedTargetGetV30PromotionContent;
import com.bytedance.ads.model.AdConvertOptimizedTargetGetV30Response;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class AdConvertOptimizedTargetGetV30Api {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public AdConvertOptimizedTargetGetV30Api() {
        this(Configuration.getDefaultApiClient());
    }

    public AdConvertOptimizedTargetGetV30Api(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for openApiV30AdConvertOptimizedTargetGetGet
     * @param advertiserId 广告主ID (required)
     * @param landingType 推广目的 (required)
     * @param marketingPurpose 营销目标 (required)
     * @param appType 应用类型 (optional)
     * @param promotionContent 推广内容 (optional)
     * @param convertTracking 转化跟踪方式 (optional)
     * @param adType 广告类型 (optional)
     * @param deliveryRange 投放范围 (optional)
     * @param externalUrl 落地页链接 (optional)
     * @param androidPackageName 安卓应用包名 (optional)
     * @param itunesUrl IOS下载链接 (optional)
     * @param convertId 转化ID (optional)
     * @param page 页数 (optional, default to 1)
     * @param pageSize 页面大小 (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call openApiV30AdConvertOptimizedTargetGetGetCall(Long advertiserId, AdConvertOptimizedTargetGetV30LandingType landingType, AdConvertOptimizedTargetGetV30MarketingPurpose marketingPurpose, AdConvertOptimizedTargetGetV30AppType appType, AdConvertOptimizedTargetGetV30PromotionContent promotionContent, AdConvertOptimizedTargetGetV30ConvertTracking convertTracking, AdConvertOptimizedTargetGetV30AdType adType, AdConvertOptimizedTargetGetV30DeliveryRange deliveryRange, String externalUrl, String androidPackageName, String itunesUrl, Long convertId, Long page, Long pageSize, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/open_api/v3.0/ad_convert/optimized_target/get/";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (advertiserId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("advertiser_id", advertiserId));
        }

        if (landingType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("landing_type", landingType));
        }

        if (marketingPurpose != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("marketing_purpose", marketingPurpose));
        }

        if (appType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("app_type", appType));
        }

        if (promotionContent != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("promotion_content", promotionContent));
        }

        if (convertTracking != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("convert_tracking", convertTracking));
        }

        if (adType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ad_type", adType));
        }

        if (deliveryRange != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("delivery_range", deliveryRange));
        }

        if (externalUrl != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("external_url", externalUrl));
        }

        if (androidPackageName != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("android_package_name", androidPackageName));
        }

        if (itunesUrl != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("itunes_url", itunesUrl));
        }

        if (convertId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("convert_id", convertId));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (pageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page_size", pageSize));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call openApiV30AdConvertOptimizedTargetGetGetValidateBeforeCall(Long advertiserId, AdConvertOptimizedTargetGetV30LandingType landingType, AdConvertOptimizedTargetGetV30MarketingPurpose marketingPurpose, AdConvertOptimizedTargetGetV30AppType appType, AdConvertOptimizedTargetGetV30PromotionContent promotionContent, AdConvertOptimizedTargetGetV30ConvertTracking convertTracking, AdConvertOptimizedTargetGetV30AdType adType, AdConvertOptimizedTargetGetV30DeliveryRange deliveryRange, String externalUrl, String androidPackageName, String itunesUrl, Long convertId, Long page, Long pageSize, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'advertiserId' is set
        if (advertiserId == null) {
            throw new ApiException("Missing the required parameter 'advertiserId' when calling openApiV30AdConvertOptimizedTargetGetGet(Async)");
        }

        // verify the required parameter 'landingType' is set
        if (landingType == null) {
            throw new ApiException("Missing the required parameter 'landingType' when calling openApiV30AdConvertOptimizedTargetGetGet(Async)");
        }

        // verify the required parameter 'marketingPurpose' is set
        if (marketingPurpose == null) {
            throw new ApiException("Missing the required parameter 'marketingPurpose' when calling openApiV30AdConvertOptimizedTargetGetGet(Async)");
        }

        return openApiV30AdConvertOptimizedTargetGetGetCall(advertiserId, landingType, marketingPurpose, appType, promotionContent, convertTracking, adType, deliveryRange, externalUrl, androidPackageName, itunesUrl, convertId, page, pageSize, _callback);

    }

    /**
     * 
     * 
     * @param advertiserId 广告主ID (required)
     * @param landingType 推广目的 (required)
     * @param marketingPurpose 营销目标 (required)
     * @param appType 应用类型 (optional)
     * @param promotionContent 推广内容 (optional)
     * @param convertTracking 转化跟踪方式 (optional)
     * @param adType 广告类型 (optional)
     * @param deliveryRange 投放范围 (optional)
     * @param externalUrl 落地页链接 (optional)
     * @param androidPackageName 安卓应用包名 (optional)
     * @param itunesUrl IOS下载链接 (optional)
     * @param convertId 转化ID (optional)
     * @param page 页数 (optional, default to 1)
     * @param pageSize 页面大小 (optional, default to 20)
     * @return AdConvertOptimizedTargetGetV30Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public AdConvertOptimizedTargetGetV30Response openApiV30AdConvertOptimizedTargetGetGet(Long advertiserId, AdConvertOptimizedTargetGetV30LandingType landingType, AdConvertOptimizedTargetGetV30MarketingPurpose marketingPurpose, AdConvertOptimizedTargetGetV30AppType appType, AdConvertOptimizedTargetGetV30PromotionContent promotionContent, AdConvertOptimizedTargetGetV30ConvertTracking convertTracking, AdConvertOptimizedTargetGetV30AdType adType, AdConvertOptimizedTargetGetV30DeliveryRange deliveryRange, String externalUrl, String androidPackageName, String itunesUrl, Long convertId, Long page, Long pageSize) throws ApiException {
        ApiResponse<AdConvertOptimizedTargetGetV30Response> localVarResp = openApiV30AdConvertOptimizedTargetGetGetWithHttpInfo(advertiserId, landingType, marketingPurpose, appType, promotionContent, convertTracking, adType, deliveryRange, externalUrl, androidPackageName, itunesUrl, convertId, page, pageSize);
        return localVarResp.getData();
    }

    /**
     * 
     * 
     * @param advertiserId 广告主ID (required)
     * @param landingType 推广目的 (required)
     * @param marketingPurpose 营销目标 (required)
     * @param appType 应用类型 (optional)
     * @param promotionContent 推广内容 (optional)
     * @param convertTracking 转化跟踪方式 (optional)
     * @param adType 广告类型 (optional)
     * @param deliveryRange 投放范围 (optional)
     * @param externalUrl 落地页链接 (optional)
     * @param androidPackageName 安卓应用包名 (optional)
     * @param itunesUrl IOS下载链接 (optional)
     * @param convertId 转化ID (optional)
     * @param page 页数 (optional, default to 1)
     * @param pageSize 页面大小 (optional, default to 20)
     * @return ApiResponse&lt;AdConvertOptimizedTargetGetV30Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AdConvertOptimizedTargetGetV30Response> openApiV30AdConvertOptimizedTargetGetGetWithHttpInfo(Long advertiserId, AdConvertOptimizedTargetGetV30LandingType landingType, AdConvertOptimizedTargetGetV30MarketingPurpose marketingPurpose, AdConvertOptimizedTargetGetV30AppType appType, AdConvertOptimizedTargetGetV30PromotionContent promotionContent, AdConvertOptimizedTargetGetV30ConvertTracking convertTracking, AdConvertOptimizedTargetGetV30AdType adType, AdConvertOptimizedTargetGetV30DeliveryRange deliveryRange, String externalUrl, String androidPackageName, String itunesUrl, Long convertId, Long page, Long pageSize) throws ApiException {
        okhttp3.Call localVarCall = openApiV30AdConvertOptimizedTargetGetGetValidateBeforeCall(advertiserId, landingType, marketingPurpose, appType, promotionContent, convertTracking, adType, deliveryRange, externalUrl, androidPackageName, itunesUrl, convertId, page, pageSize, null);
        Type localVarReturnType = new TypeToken<AdConvertOptimizedTargetGetV30Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * 
     * @param advertiserId 广告主ID (required)
     * @param landingType 推广目的 (required)
     * @param marketingPurpose 营销目标 (required)
     * @param appType 应用类型 (optional)
     * @param promotionContent 推广内容 (optional)
     * @param convertTracking 转化跟踪方式 (optional)
     * @param adType 广告类型 (optional)
     * @param deliveryRange 投放范围 (optional)
     * @param externalUrl 落地页链接 (optional)
     * @param androidPackageName 安卓应用包名 (optional)
     * @param itunesUrl IOS下载链接 (optional)
     * @param convertId 转化ID (optional)
     * @param page 页数 (optional, default to 1)
     * @param pageSize 页面大小 (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call openApiV30AdConvertOptimizedTargetGetGetAsync(Long advertiserId, AdConvertOptimizedTargetGetV30LandingType landingType, AdConvertOptimizedTargetGetV30MarketingPurpose marketingPurpose, AdConvertOptimizedTargetGetV30AppType appType, AdConvertOptimizedTargetGetV30PromotionContent promotionContent, AdConvertOptimizedTargetGetV30ConvertTracking convertTracking, AdConvertOptimizedTargetGetV30AdType adType, AdConvertOptimizedTargetGetV30DeliveryRange deliveryRange, String externalUrl, String androidPackageName, String itunesUrl, Long convertId, Long page, Long pageSize, final ApiCallback<AdConvertOptimizedTargetGetV30Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = openApiV30AdConvertOptimizedTargetGetGetValidateBeforeCall(advertiserId, landingType, marketingPurpose, appType, promotionContent, convertTracking, adType, deliveryRange, externalUrl, androidPackageName, itunesUrl, convertId, page, pageSize, _callback);
        Type localVarReturnType = new TypeToken<AdConvertOptimizedTargetGetV30Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
