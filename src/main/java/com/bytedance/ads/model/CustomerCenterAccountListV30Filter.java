/*
 * Oceanengine Open Api
 * 巨量引擎开放平台 Open Api
 *
 * The version of the OpenAPI document: 1.1.69
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bytedance.ads.model;

import java.util.Objects;
import java.util.Arrays;
import com.bytedance.ads.model.CustomerCenterAccountListV30FilterAccountType;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.bytedance.ads.JSON;

/**
 * 
 */
@javax.annotation.Generated(value = "com.org.bytedance.ad_open_sdk.JavacusGenerator", date = "2025-09-04T16:19:08.314742336+08:00[Asia/Shanghai]")
public class CustomerCenterAccountListV30Filter {
  public static final String SERIALIZED_NAME_ACCOUNT_IDS = "account_ids";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_IDS)
  private List<Long> accountIds = null;

  public static final String SERIALIZED_NAME_ACCOUNT_NAME = "account_name";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_NAME)
  private String accountName = null;

  public static final String SERIALIZED_NAME_ACCOUNT_TAG = "account_tag";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_TAG)
  private String accountTag = null;

  public static final String SERIALIZED_NAME_ACCOUNT_TYPE = "account_type";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_TYPE)
  private CustomerCenterAccountListV30FilterAccountType accountType = null;

  public CustomerCenterAccountListV30Filter() {
  }

  public CustomerCenterAccountListV30Filter accountIds(List<Long> accountIds) {
    
    this.accountIds = accountIds;
    return this;
  }

  public CustomerCenterAccountListV30Filter addAccountIdsItem(Long accountIdsItem) {
    if (this.accountIds == null) {
      this.accountIds = new ArrayList<>();
    }
    this.accountIds.add(accountIdsItem);
    return this;
  }

   /**
   * 根据账户ID筛选
   * @return accountIds
  **/
  @javax.annotation.Nullable
  public List<Long> getAccountIds() {
    return accountIds;
  }


  public void setAccountIds(List<Long> accountIds) {
    this.accountIds = accountIds;
  }


  public CustomerCenterAccountListV30Filter accountName(String accountName) {
    
    this.accountName = accountName;
    return this;
  }

   /**
   * 根据账户名称过滤
   * @return accountName
  **/
  @javax.annotation.Nullable
  public String getAccountName() {
    return accountName;
  }


  public void setAccountName(String accountName) {
    this.accountName = accountName;
  }


  public CustomerCenterAccountListV30Filter accountTag(String accountTag) {
    
    this.accountTag = accountTag;
    return this;
  }

   /**
   * 根据账户备注筛选
   * @return accountTag
  **/
  @javax.annotation.Nullable
  public String getAccountTag() {
    return accountTag;
  }


  public void setAccountTag(String accountTag) {
    this.accountTag = accountTag;
  }


  public CustomerCenterAccountListV30Filter accountType(CustomerCenterAccountListV30FilterAccountType accountType) {
    
    this.accountType = accountType;
    return this;
  }

   /**
   * Get accountType
   * @return accountType
  **/
  @javax.annotation.Nonnull
  public CustomerCenterAccountListV30FilterAccountType getAccountType() {
    return accountType;
  }


  public void setAccountType(CustomerCenterAccountListV30FilterAccountType accountType) {
    this.accountType = accountType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerCenterAccountListV30Filter customerCenterAccountListV30Filter = (CustomerCenterAccountListV30Filter) o;
    return Objects.equals(this.accountIds, customerCenterAccountListV30Filter.accountIds) &&
        Objects.equals(this.accountName, customerCenterAccountListV30Filter.accountName) &&
        Objects.equals(this.accountTag, customerCenterAccountListV30Filter.accountTag) &&
        Objects.equals(this.accountType, customerCenterAccountListV30Filter.accountType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountIds, accountName, accountTag, accountType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerCenterAccountListV30Filter {\n");
    sb.append("    accountIds: ").append(toIndentedString(accountIds)).append("\n");
    sb.append("    accountName: ").append(toIndentedString(accountName)).append("\n");
    sb.append("    accountTag: ").append(toIndentedString(accountTag)).append("\n");
    sb.append("    accountType: ").append(toIndentedString(accountType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_ids");
    openapiFields.add("account_name");
    openapiFields.add("account_tag");
    openapiFields.add("account_type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("account_type");
  }


  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomerCenterAccountListV30Filter.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomerCenterAccountListV30Filter' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomerCenterAccountListV30Filter> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomerCenterAccountListV30Filter.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomerCenterAccountListV30Filter>() {
           @Override
           public void write(JsonWriter out, CustomerCenterAccountListV30Filter value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomerCenterAccountListV30Filter read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CustomerCenterAccountListV30Filter given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CustomerCenterAccountListV30Filter
  * @throws IOException if the JSON string is invalid with respect to CustomerCenterAccountListV30Filter
  */
  public static CustomerCenterAccountListV30Filter fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomerCenterAccountListV30Filter.class);
  }

 /**
  * Convert an instance of CustomerCenterAccountListV30Filter to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

