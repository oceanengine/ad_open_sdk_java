/*
 * Oceanengine Open Api
 * 巨量引擎开放平台 Open Api
 *
 * The version of the OpenAPI document: 1.1.25
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bytedance.ads.model;

import java.util.Objects;
import java.util.Arrays;
import com.bytedance.ads.model.AicElementGetV30FilteringElementType;
import com.bytedance.ads.model.AicElementGetV30FilteringUseAs;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.bytedance.ads.JSON;

/**
 * 
 */
@javax.annotation.Generated(value = "com.org.bytedance.ad_open_sdk.JavacusGenerator", date = "2024-10-18T16:52:21.736905407+08:00[Asia/Shanghai]")
public class AicElementGetV30Filtering {
  public static final String SERIALIZED_NAME_CREATE_END_TIME = "create_end_time";
  @SerializedName(SERIALIZED_NAME_CREATE_END_TIME)
  private String createEndTime = null;

  public static final String SERIALIZED_NAME_CREATE_START_TIME = "create_start_time";
  @SerializedName(SERIALIZED_NAME_CREATE_START_TIME)
  private String createStartTime = null;

  public static final String SERIALIZED_NAME_ELEMENT_IDS = "element_ids";
  @SerializedName(SERIALIZED_NAME_ELEMENT_IDS)
  private List<Long> elementIds = null;

  public static final String SERIALIZED_NAME_ELEMENT_NAME = "element_name";
  @SerializedName(SERIALIZED_NAME_ELEMENT_NAME)
  private String elementName = null;

  public static final String SERIALIZED_NAME_ELEMENT_TYPE = "element_type";
  @SerializedName(SERIALIZED_NAME_ELEMENT_TYPE)
  private AicElementGetV30FilteringElementType elementType = null;

  public static final String SERIALIZED_NAME_PATH_NAME = "path_name";
  @SerializedName(SERIALIZED_NAME_PATH_NAME)
  private String pathName = null;

  public static final String SERIALIZED_NAME_USE_AS = "use_as";
  @SerializedName(SERIALIZED_NAME_USE_AS)
  private AicElementGetV30FilteringUseAs useAs = null;

  public AicElementGetV30Filtering() {
  }

  public AicElementGetV30Filtering createEndTime(String createEndTime) {
    
    this.createEndTime = createEndTime;
    return this;
  }

   /**
   * 根据元素创建时间进行过滤结束始时间，与create_start_time搭配使用 格式为yyyy-mm-dd HH:MM:SS
   * @return createEndTime
  **/
  @javax.annotation.Nullable
  public String getCreateEndTime() {
    return createEndTime;
  }


  public void setCreateEndTime(String createEndTime) {
    this.createEndTime = createEndTime;
  }


  public AicElementGetV30Filtering createStartTime(String createStartTime) {
    
    this.createStartTime = createStartTime;
    return this;
  }

   /**
   * 根据元素创建时间进行过滤的起始时间，与create_end_time搭配使用 格式为yyyy-mm-dd HH:MM:SS
   * @return createStartTime
  **/
  @javax.annotation.Nullable
  public String getCreateStartTime() {
    return createStartTime;
  }


  public void setCreateStartTime(String createStartTime) {
    this.createStartTime = createStartTime;
  }


  public AicElementGetV30Filtering elementIds(List<Long> elementIds) {
    
    this.elementIds = elementIds;
    return this;
  }

  public AicElementGetV30Filtering addElementIdsItem(Long elementIdsItem) {
    if (this.elementIds == null) {
      this.elementIds = new ArrayList<>();
    }
    this.elementIds.add(elementIdsItem);
    return this;
  }

   /**
   * 元素id列表，数量限制：50
   * @return elementIds
  **/
  @javax.annotation.Nullable
  public List<Long> getElementIds() {
    return elementIds;
  }


  public void setElementIds(List<Long> elementIds) {
    this.elementIds = elementIds;
  }


  public AicElementGetV30Filtering elementName(String elementName) {
    
    this.elementName = elementName;
    return this;
  }

   /**
   * 元素名称，模糊匹配
   * @return elementName
  **/
  @javax.annotation.Nullable
  public String getElementName() {
    return elementName;
  }


  public void setElementName(String elementName) {
    this.elementName = elementName;
  }


  public AicElementGetV30Filtering elementType(AicElementGetV30FilteringElementType elementType) {
    
    this.elementType = elementType;
    return this;
  }

   /**
   * Get elementType
   * @return elementType
  **/
  @javax.annotation.Nullable
  public AicElementGetV30FilteringElementType getElementType() {
    return elementType;
  }


  public void setElementType(AicElementGetV30FilteringElementType elementType) {
    this.elementType = elementType;
  }


  public AicElementGetV30Filtering pathName(String pathName) {
    
    this.pathName = pathName;
    return this;
  }

   /**
   * 元素的存储路径（文件夹） 传入后仅查询文件夹下素材，示例：/数码/电脑，/为根路径，最大层级不得超过10
   * @return pathName
  **/
  @javax.annotation.Nullable
  public String getPathName() {
    return pathName;
  }


  public void setPathName(String pathName) {
    this.pathName = pathName;
  }


  public AicElementGetV30Filtering useAs(AicElementGetV30FilteringUseAs useAs) {
    
    this.useAs = useAs;
    return this;
  }

   /**
   * Get useAs
   * @return useAs
  **/
  @javax.annotation.Nullable
  public AicElementGetV30FilteringUseAs getUseAs() {
    return useAs;
  }


  public void setUseAs(AicElementGetV30FilteringUseAs useAs) {
    this.useAs = useAs;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AicElementGetV30Filtering aicElementGetV30Filtering = (AicElementGetV30Filtering) o;
    return Objects.equals(this.createEndTime, aicElementGetV30Filtering.createEndTime) &&
        Objects.equals(this.createStartTime, aicElementGetV30Filtering.createStartTime) &&
        Objects.equals(this.elementIds, aicElementGetV30Filtering.elementIds) &&
        Objects.equals(this.elementName, aicElementGetV30Filtering.elementName) &&
        Objects.equals(this.elementType, aicElementGetV30Filtering.elementType) &&
        Objects.equals(this.pathName, aicElementGetV30Filtering.pathName) &&
        Objects.equals(this.useAs, aicElementGetV30Filtering.useAs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createEndTime, createStartTime, elementIds, elementName, elementType, pathName, useAs);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AicElementGetV30Filtering {\n");
    sb.append("    createEndTime: ").append(toIndentedString(createEndTime)).append("\n");
    sb.append("    createStartTime: ").append(toIndentedString(createStartTime)).append("\n");
    sb.append("    elementIds: ").append(toIndentedString(elementIds)).append("\n");
    sb.append("    elementName: ").append(toIndentedString(elementName)).append("\n");
    sb.append("    elementType: ").append(toIndentedString(elementType)).append("\n");
    sb.append("    pathName: ").append(toIndentedString(pathName)).append("\n");
    sb.append("    useAs: ").append(toIndentedString(useAs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("create_end_time");
    openapiFields.add("create_start_time");
    openapiFields.add("element_ids");
    openapiFields.add("element_name");
    openapiFields.add("element_type");
    openapiFields.add("path_name");
    openapiFields.add("use_as");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }


  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AicElementGetV30Filtering.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AicElementGetV30Filtering' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AicElementGetV30Filtering> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AicElementGetV30Filtering.class));

       return (TypeAdapter<T>) new TypeAdapter<AicElementGetV30Filtering>() {
           @Override
           public void write(JsonWriter out, AicElementGetV30Filtering value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AicElementGetV30Filtering read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AicElementGetV30Filtering given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AicElementGetV30Filtering
  * @throws IOException if the JSON string is invalid with respect to AicElementGetV30Filtering
  */
  public static AicElementGetV30Filtering fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AicElementGetV30Filtering.class);
  }

 /**
  * Convert an instance of AicElementGetV30Filtering to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

