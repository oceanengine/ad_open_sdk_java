/*
 * Oceanengine Open Api
 * 巨量引擎开放平台 Open Api
 *
 * The version of the OpenAPI document: 1.1.42
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bytedance.ads.model;

import java.util.Objects;
import java.util.Arrays;
import com.bytedance.ads.model.AicElementUploadV30AccountType;
import com.bytedance.ads.model.AicElementUploadV30ElementType;
import com.bytedance.ads.model.AicElementUploadV30UseAs;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.File;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.bytedance.ads.JSON;

/**
 * AicElementUploadV30Request
 */
@javax.annotation.Generated(value = "com.org.bytedance.ad_open_sdk.JavacusGenerator", date = "2025-04-07T17:34:19.910300326+08:00[Asia/Shanghai]")
public class AicElementUploadV30Request {
  public static final String SERIALIZED_NAME_ACCOUNT_ID = "account_id";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  private Long accountId = null;

  public static final String SERIALIZED_NAME_ACCOUNT_TYPE = "account_type";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_TYPE)
  private AicElementUploadV30AccountType accountType = null;

  public static final String SERIALIZED_NAME_ELEMENT_NAME = "element_name";
  @SerializedName(SERIALIZED_NAME_ELEMENT_NAME)
  private String elementName = null;

  public static final String SERIALIZED_NAME_ELEMENT_TYPE = "element_type";
  @SerializedName(SERIALIZED_NAME_ELEMENT_TYPE)
  private AicElementUploadV30ElementType elementType = null;

  public static final String SERIALIZED_NAME_FILE = "file";
  @SerializedName(SERIALIZED_NAME_FILE)
  private File _file = null;

  public static final String SERIALIZED_NAME_PATH_NAME = "path_name";
  @SerializedName(SERIALIZED_NAME_PATH_NAME)
  private String pathName = null;

  public static final String SERIALIZED_NAME_USE_AS = "use_as";
  @SerializedName(SERIALIZED_NAME_USE_AS)
  private AicElementUploadV30UseAs useAs = null;

  public AicElementUploadV30Request() {
  }

  public AicElementUploadV30Request accountId(Long accountId) {
    
    this.accountId = accountId;
    return this;
  }

   /**
   * BP账户体系:组织id，Agent账户体系:代理商id
   * @return accountId
  **/
  @javax.annotation.Nonnull
  public Long getAccountId() {
    return accountId;
  }


  public void setAccountId(Long accountId) {
    this.accountId = accountId;
  }


  public AicElementUploadV30Request accountType(AicElementUploadV30AccountType accountType) {
    
    this.accountType = accountType;
    return this;
  }

   /**
   * Get accountType
   * @return accountType
  **/
  @javax.annotation.Nonnull
  public AicElementUploadV30AccountType getAccountType() {
    return accountType;
  }


  public void setAccountType(AicElementUploadV30AccountType accountType) {
    this.accountType = accountType;
  }


  public AicElementUploadV30Request elementName(String elementName) {
    
    this.elementName = elementName;
    return this;
  }

   /**
   * 元素名称，支持中英文、数字、特殊字符，默认剔除html标签，字数限制：50
   * @return elementName
  **/
  @javax.annotation.Nullable
  public String getElementName() {
    return elementName;
  }


  public void setElementName(String elementName) {
    this.elementName = elementName;
  }


  public AicElementUploadV30Request elementType(AicElementUploadV30ElementType elementType) {
    
    this.elementType = elementType;
    return this;
  }

   /**
   * Get elementType
   * @return elementType
  **/
  @javax.annotation.Nonnull
  public AicElementUploadV30ElementType getElementType() {
    return elementType;
  }


  public void setElementType(AicElementUploadV30ElementType elementType) {
    this.elementType = elementType;
  }


  public AicElementUploadV30Request _file(File _file) {
    
    this._file = _file;
    return this;
  }

   /**
   * 上传二进制数据，如果在相同的路径下有相同的视频即为更新， 视频数据：支持mp4、mpeg、mov，单视频时长不超过10min，大小＜500M, 图片数据：jpg、jpeg、png、webp、bmp，大小&lt;150MB 字体数据：ttf格式，大小&lt;150MB 音乐数据：mp3、wav、flac、aac，大小&lt;150MB,时长不超过5min
   * @return _file
  **/
  @javax.annotation.Nullable
  public File getFile() {
    return _file;
  }


  public void setFile(File _file) {
    this._file = _file;
  }


  public AicElementUploadV30Request pathName(String pathName) {
    
    this.pathName = pathName;
    return this;
  }

   /**
   * 元素存储的文件夹路径，确保输入路径存在 示例：/数码/电脑 层级：2，最大层级限制：10，默认根目录
   * @return pathName
  **/
  @javax.annotation.Nullable
  public String getPathName() {
    return pathName;
  }


  public void setPathName(String pathName) {
    this.pathName = pathName;
  }


  public AicElementUploadV30Request useAs(AicElementUploadV30UseAs useAs) {
    
    this.useAs = useAs;
    return this;
  }

   /**
   * Get useAs
   * @return useAs
  **/
  @javax.annotation.Nullable
  public AicElementUploadV30UseAs getUseAs() {
    return useAs;
  }


  public void setUseAs(AicElementUploadV30UseAs useAs) {
    this.useAs = useAs;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AicElementUploadV30Request aicElementUploadV30Request = (AicElementUploadV30Request) o;
    return Objects.equals(this.accountId, aicElementUploadV30Request.accountId) &&
        Objects.equals(this.accountType, aicElementUploadV30Request.accountType) &&
        Objects.equals(this.elementName, aicElementUploadV30Request.elementName) &&
        Objects.equals(this.elementType, aicElementUploadV30Request.elementType) &&
        Objects.equals(this._file, aicElementUploadV30Request._file) &&
        Objects.equals(this.pathName, aicElementUploadV30Request.pathName) &&
        Objects.equals(this.useAs, aicElementUploadV30Request.useAs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, accountType, elementName, elementType, _file, pathName, useAs);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AicElementUploadV30Request {\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    accountType: ").append(toIndentedString(accountType)).append("\n");
    sb.append("    elementName: ").append(toIndentedString(elementName)).append("\n");
    sb.append("    elementType: ").append(toIndentedString(elementType)).append("\n");
    sb.append("    _file: ").append(toIndentedString(_file)).append("\n");
    sb.append("    pathName: ").append(toIndentedString(pathName)).append("\n");
    sb.append("    useAs: ").append(toIndentedString(useAs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_id");
    openapiFields.add("account_type");
    openapiFields.add("element_name");
    openapiFields.add("element_type");
    openapiFields.add("file");
    openapiFields.add("path_name");
    openapiFields.add("use_as");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("account_id");
    openapiRequiredFields.add("account_type");
    openapiRequiredFields.add("element_type");
  }


  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AicElementUploadV30Request.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AicElementUploadV30Request' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AicElementUploadV30Request> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AicElementUploadV30Request.class));

       return (TypeAdapter<T>) new TypeAdapter<AicElementUploadV30Request>() {
           @Override
           public void write(JsonWriter out, AicElementUploadV30Request value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AicElementUploadV30Request read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AicElementUploadV30Request given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AicElementUploadV30Request
  * @throws IOException if the JSON string is invalid with respect to AicElementUploadV30Request
  */
  public static AicElementUploadV30Request fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AicElementUploadV30Request.class);
  }

 /**
  * Convert an instance of AicElementUploadV30Request to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

