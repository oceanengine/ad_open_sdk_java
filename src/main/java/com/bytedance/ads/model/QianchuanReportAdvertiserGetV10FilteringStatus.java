/*
 * Oceanengine Open Api
 * 巨量引擎开放平台 Open Api
 *
 * The version of the OpenAPI document: 1.1.67
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bytedance.ads.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * 按计划状态过滤，不传入即默认返回全部（包含已删除），允许值： - &#x60;ALL_INCLUDE_DELETED&#x60; 所有,包含已删除 - &#x60;AUDIT&#x60; 新建审核中 - &#x60;DELETED&#x60; 已删除 - &#x60;DELIVERY_OK&#x60; 投放中 - &#x60;DISABLE&#x60; 已暂停 - &#x60;EXTERNAL_URL_DISABLE&#x60; 落地页暂不可用 - &#x60;FROZEN&#x60; 已终止 - &#x60;LIVE_ROOM_OFF&#x60; 关联直播间未开播 - &#x60;NO_SCHEDULE&#x60; 不在投放时段 - &#x60;OFFLINE_AUDIT&#x60; 审核不通过 - &#x60;OFFLINE_BALANCE&#x60; 账户余额不足 - &#x60;OFFLINE_BUDGET&#x60; 广告超出预算 - &#x60;REAUDIT&#x60; 修改审核中 - &#x60;TIME_DONE&#x60; 已完成 - &#x60;TIME_NO_REACH&#x60; 未达到投放时间 注意：当order_platform &#x3D; &#x60;ECP_AWEME&#x60; 下单平台为小店随心推时，不支持传入
 */
@JsonAdapter(QianchuanReportAdvertiserGetV10FilteringStatus.Adapter.class)
public enum QianchuanReportAdvertiserGetV10FilteringStatus {
  
  ALL_INCLUDE_DELETED("ALL_INCLUDE_DELETED"),
  
  AUDIT("AUDIT"),
  
  DELETED("DELETED"),
  
  DELIVERY_OK("DELIVERY_OK"),
  
  DISABLE("DISABLE"),
  
  EXTERNAL_URL_DISABLE("EXTERNAL_URL_DISABLE"),
  
  FROZEN("FROZEN"),
  
  LIVE_ROOM_OFF("LIVE_ROOM_OFF"),
  
  NO_SCHEDULE("NO_SCHEDULE"),
  
  OFFLINE_AUDIT("OFFLINE_AUDIT"),
  
  OFFLINE_BALANCE("OFFLINE_BALANCE"),
  
  OFFLINE_BUDGET("OFFLINE_BUDGET"),
  
  QUOTA_DISABLE("QUOTA_DISABLE"),
  
  REAUDIT("REAUDIT"),
  
  SYSTEM_DISABLE("SYSTEM_DISABLE"),
  
  TIME_DONE("TIME_DONE"),
  
  TIME_NO_REACH("TIME_NO_REACH");

  private String value;

  QianchuanReportAdvertiserGetV10FilteringStatus(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static QianchuanReportAdvertiserGetV10FilteringStatus fromValue(String value) {
    for (QianchuanReportAdvertiserGetV10FilteringStatus b : QianchuanReportAdvertiserGetV10FilteringStatus.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<QianchuanReportAdvertiserGetV10FilteringStatus> {
    @Override
    public void write(final JsonWriter jsonWriter, final QianchuanReportAdvertiserGetV10FilteringStatus enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public QianchuanReportAdvertiserGetV10FilteringStatus read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return QianchuanReportAdvertiserGetV10FilteringStatus.fromValue(value);
    }
  }
}

