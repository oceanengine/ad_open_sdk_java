/*
 * Oceanengine Open Api
 * 巨量引擎开放平台 Open Api
 *
 * The version of the OpenAPI document: 1.1.59
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bytedance.ads.model;

import java.util.Objects;
import java.util.Arrays;
import com.bytedance.ads.model.OpenMaterialAuditProSubmitV30InputType;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.bytedance.ads.JSON;

/**
 * 输入
 */
@javax.annotation.Generated(value = "com.org.bytedance.ad_open_sdk.JavacusGenerator", date = "2025-06-30T14:14:06.920929941+08:00[Asia/Shanghai]")
public class OpenMaterialAuditProSubmitV30RequestInput {
  public static final String SERIALIZED_NAME_FILE_ID = "file_id";
  @SerializedName(SERIALIZED_NAME_FILE_ID)
  private String fileId = null;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private OpenMaterialAuditProSubmitV30InputType type = null;

  public static final String SERIALIZED_NAME_VID = "vid";
  @SerializedName(SERIALIZED_NAME_VID)
  private String vid = null;

  public OpenMaterialAuditProSubmitV30RequestInput() {
  }

  public OpenMaterialAuditProSubmitV30RequestInput fileId(String fileId) {
    
    this.fileId = fileId;
    return this;
  }

   /**
   * 某个片源ID的转码产物ID，type为FILEID时必传
   * @return fileId
  **/
  @javax.annotation.Nullable
  public String getFileId() {
    return fileId;
  }


  public void setFileId(String fileId) {
    this.fileId = fileId;
  }


  public OpenMaterialAuditProSubmitV30RequestInput type(OpenMaterialAuditProSubmitV30InputType type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  public OpenMaterialAuditProSubmitV30InputType getType() {
    return type;
  }


  public void setType(OpenMaterialAuditProSubmitV30InputType type) {
    this.type = type;
  }


  public OpenMaterialAuditProSubmitV30RequestInput vid(String vid) {
    
    this.vid = vid;
    return this;
  }

   /**
   * 片源视频ID, type为VID和FILEID时必传
   * @return vid
  **/
  @javax.annotation.Nonnull
  public String getVid() {
    return vid;
  }


  public void setVid(String vid) {
    this.vid = vid;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OpenMaterialAuditProSubmitV30RequestInput openMaterialAuditProSubmitV30RequestInput = (OpenMaterialAuditProSubmitV30RequestInput) o;
    return Objects.equals(this.fileId, openMaterialAuditProSubmitV30RequestInput.fileId) &&
        Objects.equals(this.type, openMaterialAuditProSubmitV30RequestInput.type) &&
        Objects.equals(this.vid, openMaterialAuditProSubmitV30RequestInput.vid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fileId, type, vid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OpenMaterialAuditProSubmitV30RequestInput {\n");
    sb.append("    fileId: ").append(toIndentedString(fileId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    vid: ").append(toIndentedString(vid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("file_id");
    openapiFields.add("type");
    openapiFields.add("vid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("type");
    openapiRequiredFields.add("vid");
  }


  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OpenMaterialAuditProSubmitV30RequestInput.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OpenMaterialAuditProSubmitV30RequestInput' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OpenMaterialAuditProSubmitV30RequestInput> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OpenMaterialAuditProSubmitV30RequestInput.class));

       return (TypeAdapter<T>) new TypeAdapter<OpenMaterialAuditProSubmitV30RequestInput>() {
           @Override
           public void write(JsonWriter out, OpenMaterialAuditProSubmitV30RequestInput value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OpenMaterialAuditProSubmitV30RequestInput read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of OpenMaterialAuditProSubmitV30RequestInput given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of OpenMaterialAuditProSubmitV30RequestInput
  * @throws IOException if the JSON string is invalid with respect to OpenMaterialAuditProSubmitV30RequestInput
  */
  public static OpenMaterialAuditProSubmitV30RequestInput fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OpenMaterialAuditProSubmitV30RequestInput.class);
  }

 /**
  * Convert an instance of OpenMaterialAuditProSubmitV30RequestInput to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

