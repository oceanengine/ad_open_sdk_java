/*
 * Oceanengine Open Api
 * 巨量引擎开放平台 Open Api
 *
 * The version of the OpenAPI document: 1.1.69
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bytedance.ads.model;

import java.util.Objects;
import java.util.Arrays;
import com.bytedance.ads.model.AgentPrepayChargeGenerateRemittanceCodeV2RequestContractInfo;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.bytedance.ads.JSON;

/**
 * AgentPrepayChargeGenerateRemittanceCodeV2Request
 */
@javax.annotation.Generated(value = "com.org.bytedance.ad_open_sdk.JavacusGenerator", date = "2025-09-04T16:19:08.314742336+08:00[Asia/Shanghai]")
public class AgentPrepayChargeGenerateRemittanceCodeV2Request {
  public static final String SERIALIZED_NAME_AGENT_ID = "agent_id";
  @SerializedName(SERIALIZED_NAME_AGENT_ID)
  private Long agentId = null;

  public static final String SERIALIZED_NAME_CALLER_REQUEST_ID = "caller_request_id";
  @SerializedName(SERIALIZED_NAME_CALLER_REQUEST_ID)
  private String callerRequestId = null;

  public static final String SERIALIZED_NAME_CHARGE_AMOUNT = "charge_amount";
  @SerializedName(SERIALIZED_NAME_CHARGE_AMOUNT)
  private Long chargeAmount = null;

  public static final String SERIALIZED_NAME_CONTRACT_INFO = "contract_info";
  @SerializedName(SERIALIZED_NAME_CONTRACT_INFO)
  private AgentPrepayChargeGenerateRemittanceCodeV2RequestContractInfo contractInfo = null;

  public static final String SERIALIZED_NAME_RISK_INFO = "risk_info";
  @SerializedName(SERIALIZED_NAME_RISK_INFO)
  private String riskInfo = null;

  public AgentPrepayChargeGenerateRemittanceCodeV2Request() {
  }

  public AgentPrepayChargeGenerateRemittanceCodeV2Request agentId(Long agentId) {
    
    this.agentId = agentId;
    return this;
  }

   /**
   * 代理商账号ID
   * @return agentId
  **/
  @javax.annotation.Nonnull
  public Long getAgentId() {
    return agentId;
  }


  public void setAgentId(Long agentId) {
    this.agentId = agentId;
  }


  public AgentPrepayChargeGenerateRemittanceCodeV2Request callerRequestId(String callerRequestId) {
    
    this.callerRequestId = callerRequestId;
    return this;
  }

   /**
   * 充值请求唯一ID
   * @return callerRequestId
  **/
  @javax.annotation.Nonnull
  public String getCallerRequestId() {
    return callerRequestId;
  }


  public void setCallerRequestId(String callerRequestId) {
    this.callerRequestId = callerRequestId;
  }


  public AgentPrepayChargeGenerateRemittanceCodeV2Request chargeAmount(Long chargeAmount) {
    
    this.chargeAmount = chargeAmount;
    return this;
  }

   /**
   * 充值金额，单位为分（即实际金额*100） 
   * minimum: 1
   * maximum: 1000000000
   * @return chargeAmount
  **/
  @javax.annotation.Nonnull
  public Long getChargeAmount() {
    return chargeAmount;
  }


  public void setChargeAmount(Long chargeAmount) {
    this.chargeAmount = chargeAmount;
  }


  public AgentPrepayChargeGenerateRemittanceCodeV2Request contractInfo(AgentPrepayChargeGenerateRemittanceCodeV2RequestContractInfo contractInfo) {
    
    this.contractInfo = contractInfo;
    return this;
  }

   /**
   * Get contractInfo
   * @return contractInfo
  **/
  @javax.annotation.Nonnull
  public AgentPrepayChargeGenerateRemittanceCodeV2RequestContractInfo getContractInfo() {
    return contractInfo;
  }


  public void setContractInfo(AgentPrepayChargeGenerateRemittanceCodeV2RequestContractInfo contractInfo) {
    this.contractInfo = contractInfo;
  }


  public AgentPrepayChargeGenerateRemittanceCodeV2Request riskInfo(String riskInfo) {
    
    this.riskInfo = riskInfo;
    return this;
  }

   /**
   * 风控信息，至少需要包含device_id和ip的json字符串，例子：{\&quot;ip\&quot;: xxx, \&quot;device_id\&quot;: xxx}
   * @return riskInfo
  **/
  @javax.annotation.Nullable
  public String getRiskInfo() {
    return riskInfo;
  }


  public void setRiskInfo(String riskInfo) {
    this.riskInfo = riskInfo;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AgentPrepayChargeGenerateRemittanceCodeV2Request agentPrepayChargeGenerateRemittanceCodeV2Request = (AgentPrepayChargeGenerateRemittanceCodeV2Request) o;
    return Objects.equals(this.agentId, agentPrepayChargeGenerateRemittanceCodeV2Request.agentId) &&
        Objects.equals(this.callerRequestId, agentPrepayChargeGenerateRemittanceCodeV2Request.callerRequestId) &&
        Objects.equals(this.chargeAmount, agentPrepayChargeGenerateRemittanceCodeV2Request.chargeAmount) &&
        Objects.equals(this.contractInfo, agentPrepayChargeGenerateRemittanceCodeV2Request.contractInfo) &&
        Objects.equals(this.riskInfo, agentPrepayChargeGenerateRemittanceCodeV2Request.riskInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agentId, callerRequestId, chargeAmount, contractInfo, riskInfo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AgentPrepayChargeGenerateRemittanceCodeV2Request {\n");
    sb.append("    agentId: ").append(toIndentedString(agentId)).append("\n");
    sb.append("    callerRequestId: ").append(toIndentedString(callerRequestId)).append("\n");
    sb.append("    chargeAmount: ").append(toIndentedString(chargeAmount)).append("\n");
    sb.append("    contractInfo: ").append(toIndentedString(contractInfo)).append("\n");
    sb.append("    riskInfo: ").append(toIndentedString(riskInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("agent_id");
    openapiFields.add("caller_request_id");
    openapiFields.add("charge_amount");
    openapiFields.add("contract_info");
    openapiFields.add("risk_info");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("agent_id");
    openapiRequiredFields.add("caller_request_id");
    openapiRequiredFields.add("charge_amount");
    openapiRequiredFields.add("contract_info");
  }


  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AgentPrepayChargeGenerateRemittanceCodeV2Request.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AgentPrepayChargeGenerateRemittanceCodeV2Request' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AgentPrepayChargeGenerateRemittanceCodeV2Request> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AgentPrepayChargeGenerateRemittanceCodeV2Request.class));

       return (TypeAdapter<T>) new TypeAdapter<AgentPrepayChargeGenerateRemittanceCodeV2Request>() {
           @Override
           public void write(JsonWriter out, AgentPrepayChargeGenerateRemittanceCodeV2Request value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AgentPrepayChargeGenerateRemittanceCodeV2Request read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AgentPrepayChargeGenerateRemittanceCodeV2Request given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AgentPrepayChargeGenerateRemittanceCodeV2Request
  * @throws IOException if the JSON string is invalid with respect to AgentPrepayChargeGenerateRemittanceCodeV2Request
  */
  public static AgentPrepayChargeGenerateRemittanceCodeV2Request fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AgentPrepayChargeGenerateRemittanceCodeV2Request.class);
  }

 /**
  * Convert an instance of AgentPrepayChargeGenerateRemittanceCodeV2Request to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

