/*
 * Oceanengine Open Api
 * 巨量引擎开放平台 Open Api
 *
 * The version of the OpenAPI document: 1.1.71
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bytedance.ads.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * 
 */
@JsonAdapter(DpaProductAvailablesV2DataListProductIndustry.Adapter.class)
public enum DpaProductAvailablesV2DataListProductIndustry {
  
  AUTO_OLD("AUTO_OLD"),
  
  GAME("GAME"),
  
  IAAPLAYLET("IAAPLAYLET"),
  
  TOUR_HOTEL("TOUR_HOTEL"),
  
  BASE_HOUSE("BASE_HOUSE"),
  
  TOUR_ROUTE("TOUR_ROUTE"),
  
  PLAYLET("PLAYLET"),
  
  SPECIALMAKEUP("SPECIALMAKEUP"),
  
  NOVEL("NOVEL"),
  
  ESTATE("ESTATE"),
  
  FURNITURE("FURNITURE"),
  
  EDUCATION("EDUCATION"),
  
  TRAVELSHOOT("TRAVELSHOOT"),
  
  BEAUTYSALON("BEAUTYSALON"),
  
  FINANCE("FINANCE"),
  
  HOME("HOME"),
  
  HEALTHPRODUCTS("HEALTHPRODUCTS"),
  
  ECOMMERCE("ECOMMERCE"),
  
  GENERAL("GENERAL"),
  
  MERCHANTS("MERCHANTS"),
  
  TOUR_TICKET("TOUR_TICKET"),
  
  RECRUITMENT("RECRUITMENT"),
  
  WEALTH("WEALTH"),
  
  ECOMMERCE_V2("ECOMMERCE_V2"),
  
  MEDICAL_SERVICE("MEDICAL_SERVICE"),
  
  VIDEO("VIDEO"),
  
  LARGELOANS("LARGELOANS"),
  
  FAMILYSHOOT("FAMILYSHOOT"),
  
  COMPREHENSIVESHOOT("COMPREHENSIVESHOOT"),
  
  INVESTMENTPROMOTION("INVESTMENTPROMOTION"),
  
  COMMUNICATION("COMMUNICATION"),
  
  MEDICINE("MEDICINE"),
  
  CREDIT("CREDIT"),
  
  JOBS("JOBS"),
  
  NEW_HOUSE("NEW_HOUSE"),
  
  LIVE("LIVE"),
  
  OTHER("OTHER"),
  
  LAW("LAW"),
  
  AUTO_NEW("AUTO_NEW"),
  
  TRANSPORT_TICKET("TRANSPORT_TICKET"),
  
  LOCALSHOOT("LOCALSHOOT");

  private String value;

  DpaProductAvailablesV2DataListProductIndustry(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static DpaProductAvailablesV2DataListProductIndustry fromValue(String value) {
    for (DpaProductAvailablesV2DataListProductIndustry b : DpaProductAvailablesV2DataListProductIndustry.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<DpaProductAvailablesV2DataListProductIndustry> {
    @Override
    public void write(final JsonWriter jsonWriter, final DpaProductAvailablesV2DataListProductIndustry enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public DpaProductAvailablesV2DataListProductIndustry read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return DpaProductAvailablesV2DataListProductIndustry.fromValue(value);
    }
  }
}

