/*
 * Oceanengine Open Api
 * 巨量引擎开放平台 Open Api
 *
 * The version of the OpenAPI document: 1.1.21
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bytedance.ads.model;

import java.util.Objects;
import java.util.Arrays;
import com.bytedance.ads.model.ToolsPreAuditGetV2FilterMaterialType;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.bytedance.ads.JSON;

/**
 * 
 */
@javax.annotation.Generated(value = "com.org.bytedance.ad_open_sdk.JavacusGenerator", date = "2024-09-23T20:22:05.728466681+08:00[Asia/Shanghai]")
public class ToolsPreAuditGetV2Filter {
  public static final String SERIALIZED_NAME_CONTENTS = "contents";
  @SerializedName(SERIALIZED_NAME_CONTENTS)
  private List<String> contents = null;

  public static final String SERIALIZED_NAME_MATERIAL_TYPE = "material_type";
  @SerializedName(SERIALIZED_NAME_MATERIAL_TYPE)
  private ToolsPreAuditGetV2FilterMaterialType materialType = null;

  public static final String SERIALIZED_NAME_PRE_AUDIT_IDS = "pre_audit_ids";
  @SerializedName(SERIALIZED_NAME_PRE_AUDIT_IDS)
  private List<Long> preAuditIds = null;

  public ToolsPreAuditGetV2Filter() {
  }

  public ToolsPreAuditGetV2Filter contents(List<String> contents) {
    
    this.contents = contents;
    return this;
  }

  public ToolsPreAuditGetV2Filter addContentsItem(String contentsItem) {
    if (this.contents == null) {
      this.contents = new ArrayList<>();
    }
    this.contents.add(contentsItem);
    return this;
  }

   /**
   * 前置预审物料 - 文本物料：用户上传文本 - 图片物料：用户上传图片链接或图片ID - 视频物料：用户上传的视频云ID - 落地页物料： 用户上传落地页URL
   * @return contents
  **/
  @javax.annotation.Nullable
  public List<String> getContents() {
    return contents;
  }


  public void setContents(List<String> contents) {
    this.contents = contents;
  }


  public ToolsPreAuditGetV2Filter materialType(ToolsPreAuditGetV2FilterMaterialType materialType) {
    
    this.materialType = materialType;
    return this;
  }

   /**
   * Get materialType
   * @return materialType
  **/
  @javax.annotation.Nullable
  public ToolsPreAuditGetV2FilterMaterialType getMaterialType() {
    return materialType;
  }


  public void setMaterialType(ToolsPreAuditGetV2FilterMaterialType materialType) {
    this.materialType = materialType;
  }


  public ToolsPreAuditGetV2Filter preAuditIds(List<Long> preAuditIds) {
    
    this.preAuditIds = preAuditIds;
    return this;
  }

  public ToolsPreAuditGetV2Filter addPreAuditIdsItem(Long preAuditIdsItem) {
    if (this.preAuditIds == null) {
      this.preAuditIds = new ArrayList<>();
    }
    this.preAuditIds.add(preAuditIdsItem);
    return this;
  }

   /**
   * 前置预审ID列表
   * @return preAuditIds
  **/
  @javax.annotation.Nullable
  public List<Long> getPreAuditIds() {
    return preAuditIds;
  }


  public void setPreAuditIds(List<Long> preAuditIds) {
    this.preAuditIds = preAuditIds;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ToolsPreAuditGetV2Filter toolsPreAuditGetV2Filter = (ToolsPreAuditGetV2Filter) o;
    return Objects.equals(this.contents, toolsPreAuditGetV2Filter.contents) &&
        Objects.equals(this.materialType, toolsPreAuditGetV2Filter.materialType) &&
        Objects.equals(this.preAuditIds, toolsPreAuditGetV2Filter.preAuditIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contents, materialType, preAuditIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ToolsPreAuditGetV2Filter {\n");
    sb.append("    contents: ").append(toIndentedString(contents)).append("\n");
    sb.append("    materialType: ").append(toIndentedString(materialType)).append("\n");
    sb.append("    preAuditIds: ").append(toIndentedString(preAuditIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("contents");
    openapiFields.add("material_type");
    openapiFields.add("pre_audit_ids");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }


  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ToolsPreAuditGetV2Filter.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ToolsPreAuditGetV2Filter' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ToolsPreAuditGetV2Filter> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ToolsPreAuditGetV2Filter.class));

       return (TypeAdapter<T>) new TypeAdapter<ToolsPreAuditGetV2Filter>() {
           @Override
           public void write(JsonWriter out, ToolsPreAuditGetV2Filter value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ToolsPreAuditGetV2Filter read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ToolsPreAuditGetV2Filter given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ToolsPreAuditGetV2Filter
  * @throws IOException if the JSON string is invalid with respect to ToolsPreAuditGetV2Filter
  */
  public static ToolsPreAuditGetV2Filter fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ToolsPreAuditGetV2Filter.class);
  }

 /**
  * Convert an instance of ToolsPreAuditGetV2Filter to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

