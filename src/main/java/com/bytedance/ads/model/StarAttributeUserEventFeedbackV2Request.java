/*
 * Oceanengine Open Api
 * 巨量引擎开放平台 Open Api
 *
 * The version of the OpenAPI document: 1.1.52
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bytedance.ads.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.bytedance.ads.JSON;

/**
 * StarAttributeUserEventFeedbackV2Request
 */
@javax.annotation.Generated(value = "com.org.bytedance.ad_open_sdk.JavacusGenerator", date = "2025-05-16T11:39:28.293588012+08:00[Asia/Shanghai]")
public class StarAttributeUserEventFeedbackV2Request {
  public static final String SERIALIZED_NAME_CAID = "caid";
  @SerializedName(SERIALIZED_NAME_CAID)
  private String caid = null;

  public static final String SERIALIZED_NAME_EVENT_TYPE = "event_type";
  @SerializedName(SERIALIZED_NAME_EVENT_TYPE)
  private Long eventType = null;

  public static final String SERIALIZED_NAME_OAID = "oaid";
  @SerializedName(SERIALIZED_NAME_OAID)
  private String oaid = null;

  public static final String SERIALIZED_NAME_STAR_ID = "star_id";
  @SerializedName(SERIALIZED_NAME_STAR_ID)
  private Long starId = null;

  public static final String SERIALIZED_NAME_TIME_STAMP = "time_stamp";
  @SerializedName(SERIALIZED_NAME_TIME_STAMP)
  private Long timeStamp = null;

  public StarAttributeUserEventFeedbackV2Request() {
  }

  public StarAttributeUserEventFeedbackV2Request caid(String caid) {
    
    this.caid = caid;
    return this;
  }

   /**
   * 
   * @return caid
  **/
  @javax.annotation.Nullable
  public String getCaid() {
    return caid;
  }


  public void setCaid(String caid) {
    this.caid = caid;
  }


  public StarAttributeUserEventFeedbackV2Request eventType(Long eventType) {
    
    this.eventType = eventType;
    return this;
  }

   /**
   * 
   * @return eventType
  **/
  @javax.annotation.Nonnull
  public Long getEventType() {
    return eventType;
  }


  public void setEventType(Long eventType) {
    this.eventType = eventType;
  }


  public StarAttributeUserEventFeedbackV2Request oaid(String oaid) {
    
    this.oaid = oaid;
    return this;
  }

   /**
   * 
   * @return oaid
  **/
  @javax.annotation.Nullable
  public String getOaid() {
    return oaid;
  }


  public void setOaid(String oaid) {
    this.oaid = oaid;
  }


  public StarAttributeUserEventFeedbackV2Request starId(Long starId) {
    
    this.starId = starId;
    return this;
  }

   /**
   * 
   * @return starId
  **/
  @javax.annotation.Nonnull
  public Long getStarId() {
    return starId;
  }


  public void setStarId(Long starId) {
    this.starId = starId;
  }


  public StarAttributeUserEventFeedbackV2Request timeStamp(Long timeStamp) {
    
    this.timeStamp = timeStamp;
    return this;
  }

   /**
   * 
   * @return timeStamp
  **/
  @javax.annotation.Nullable
  public Long getTimeStamp() {
    return timeStamp;
  }


  public void setTimeStamp(Long timeStamp) {
    this.timeStamp = timeStamp;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StarAttributeUserEventFeedbackV2Request starAttributeUserEventFeedbackV2Request = (StarAttributeUserEventFeedbackV2Request) o;
    return Objects.equals(this.caid, starAttributeUserEventFeedbackV2Request.caid) &&
        Objects.equals(this.eventType, starAttributeUserEventFeedbackV2Request.eventType) &&
        Objects.equals(this.oaid, starAttributeUserEventFeedbackV2Request.oaid) &&
        Objects.equals(this.starId, starAttributeUserEventFeedbackV2Request.starId) &&
        Objects.equals(this.timeStamp, starAttributeUserEventFeedbackV2Request.timeStamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(caid, eventType, oaid, starId, timeStamp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StarAttributeUserEventFeedbackV2Request {\n");
    sb.append("    caid: ").append(toIndentedString(caid)).append("\n");
    sb.append("    eventType: ").append(toIndentedString(eventType)).append("\n");
    sb.append("    oaid: ").append(toIndentedString(oaid)).append("\n");
    sb.append("    starId: ").append(toIndentedString(starId)).append("\n");
    sb.append("    timeStamp: ").append(toIndentedString(timeStamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("caid");
    openapiFields.add("event_type");
    openapiFields.add("oaid");
    openapiFields.add("star_id");
    openapiFields.add("time_stamp");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("event_type");
    openapiRequiredFields.add("star_id");
  }


  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StarAttributeUserEventFeedbackV2Request.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StarAttributeUserEventFeedbackV2Request' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StarAttributeUserEventFeedbackV2Request> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StarAttributeUserEventFeedbackV2Request.class));

       return (TypeAdapter<T>) new TypeAdapter<StarAttributeUserEventFeedbackV2Request>() {
           @Override
           public void write(JsonWriter out, StarAttributeUserEventFeedbackV2Request value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public StarAttributeUserEventFeedbackV2Request read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of StarAttributeUserEventFeedbackV2Request given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of StarAttributeUserEventFeedbackV2Request
  * @throws IOException if the JSON string is invalid with respect to StarAttributeUserEventFeedbackV2Request
  */
  public static StarAttributeUserEventFeedbackV2Request fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StarAttributeUserEventFeedbackV2Request.class);
  }

 /**
  * Convert an instance of StarAttributeUserEventFeedbackV2Request to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

