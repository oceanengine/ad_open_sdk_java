/*
 * Oceanengine Open Api
 * 巨量引擎开放平台 Open Api
 *
 * The version of the OpenAPI document: 1.1.68
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bytedance.ads.model;

import java.util.Objects;
import java.util.Arrays;
import com.bytedance.ads.model.ToolsHotMaterialDeriveListV30FilteringStatuses;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.bytedance.ads.JSON;

/**
 * 
 */
@javax.annotation.Generated(value = "com.org.bytedance.ad_open_sdk.JavacusGenerator", date = "2025-08-27T11:42:40.453677826+08:00[Asia/Shanghai]")
public class ToolsHotMaterialDeriveListV30Filtering {
  public static final String SERIALIZED_NAME_END_TIME = "end_time";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private String endTime = null;

  public static final String SERIALIZED_NAME_ORIGIN_MATERIAL_IDS = "origin_material_ids";
  @SerializedName(SERIALIZED_NAME_ORIGIN_MATERIAL_IDS)
  private List<Long> originMaterialIds = null;

  public static final String SERIALIZED_NAME_START_TIME = "start_time";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private String startTime = null;

  public static final String SERIALIZED_NAME_STATUSES = "statuses";
  @SerializedName(SERIALIZED_NAME_STATUSES)
  private List<ToolsHotMaterialDeriveListV30FilteringStatuses> statuses = null;

  public static final String SERIALIZED_NAME_TASK_IDS = "task_ids";
  @SerializedName(SERIALIZED_NAME_TASK_IDS)
  private List<Long> taskIds = null;

  public ToolsHotMaterialDeriveListV30Filtering() {
  }

  public ToolsHotMaterialDeriveListV30Filtering endTime(String endTime) {
    
    this.endTime = endTime;
    return this;
  }

   /**
   * 
   * @return endTime
  **/
  @javax.annotation.Nullable
  public String getEndTime() {
    return endTime;
  }


  public void setEndTime(String endTime) {
    this.endTime = endTime;
  }


  public ToolsHotMaterialDeriveListV30Filtering originMaterialIds(List<Long> originMaterialIds) {
    
    this.originMaterialIds = originMaterialIds;
    return this;
  }

  public ToolsHotMaterialDeriveListV30Filtering addOriginMaterialIdsItem(Long originMaterialIdsItem) {
    if (this.originMaterialIds == null) {
      this.originMaterialIds = new ArrayList<>();
    }
    this.originMaterialIds.add(originMaterialIdsItem);
    return this;
  }

   /**
   * 
   * @return originMaterialIds
  **/
  @javax.annotation.Nullable
  public List<Long> getOriginMaterialIds() {
    return originMaterialIds;
  }


  public void setOriginMaterialIds(List<Long> originMaterialIds) {
    this.originMaterialIds = originMaterialIds;
  }


  public ToolsHotMaterialDeriveListV30Filtering startTime(String startTime) {
    
    this.startTime = startTime;
    return this;
  }

   /**
   * 
   * @return startTime
  **/
  @javax.annotation.Nullable
  public String getStartTime() {
    return startTime;
  }


  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }


  public ToolsHotMaterialDeriveListV30Filtering statuses(List<ToolsHotMaterialDeriveListV30FilteringStatuses> statuses) {
    
    this.statuses = statuses;
    return this;
  }

  public ToolsHotMaterialDeriveListV30Filtering addStatusesItem(ToolsHotMaterialDeriveListV30FilteringStatuses statusesItem) {
    if (this.statuses == null) {
      this.statuses = new ArrayList<>();
    }
    this.statuses.add(statusesItem);
    return this;
  }

   /**
   * 
   * @return statuses
  **/
  @javax.annotation.Nullable
  public List<ToolsHotMaterialDeriveListV30FilteringStatuses> getStatuses() {
    return statuses;
  }


  public void setStatuses(List<ToolsHotMaterialDeriveListV30FilteringStatuses> statuses) {
    this.statuses = statuses;
  }


  public ToolsHotMaterialDeriveListV30Filtering taskIds(List<Long> taskIds) {
    
    this.taskIds = taskIds;
    return this;
  }

  public ToolsHotMaterialDeriveListV30Filtering addTaskIdsItem(Long taskIdsItem) {
    if (this.taskIds == null) {
      this.taskIds = new ArrayList<>();
    }
    this.taskIds.add(taskIdsItem);
    return this;
  }

   /**
   * 
   * @return taskIds
  **/
  @javax.annotation.Nullable
  public List<Long> getTaskIds() {
    return taskIds;
  }


  public void setTaskIds(List<Long> taskIds) {
    this.taskIds = taskIds;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ToolsHotMaterialDeriveListV30Filtering toolsHotMaterialDeriveListV30Filtering = (ToolsHotMaterialDeriveListV30Filtering) o;
    return Objects.equals(this.endTime, toolsHotMaterialDeriveListV30Filtering.endTime) &&
        Objects.equals(this.originMaterialIds, toolsHotMaterialDeriveListV30Filtering.originMaterialIds) &&
        Objects.equals(this.startTime, toolsHotMaterialDeriveListV30Filtering.startTime) &&
        Objects.equals(this.statuses, toolsHotMaterialDeriveListV30Filtering.statuses) &&
        Objects.equals(this.taskIds, toolsHotMaterialDeriveListV30Filtering.taskIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(endTime, originMaterialIds, startTime, statuses, taskIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ToolsHotMaterialDeriveListV30Filtering {\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    originMaterialIds: ").append(toIndentedString(originMaterialIds)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    statuses: ").append(toIndentedString(statuses)).append("\n");
    sb.append("    taskIds: ").append(toIndentedString(taskIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("end_time");
    openapiFields.add("origin_material_ids");
    openapiFields.add("start_time");
    openapiFields.add("statuses");
    openapiFields.add("task_ids");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }


  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ToolsHotMaterialDeriveListV30Filtering.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ToolsHotMaterialDeriveListV30Filtering' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ToolsHotMaterialDeriveListV30Filtering> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ToolsHotMaterialDeriveListV30Filtering.class));

       return (TypeAdapter<T>) new TypeAdapter<ToolsHotMaterialDeriveListV30Filtering>() {
           @Override
           public void write(JsonWriter out, ToolsHotMaterialDeriveListV30Filtering value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ToolsHotMaterialDeriveListV30Filtering read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ToolsHotMaterialDeriveListV30Filtering given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ToolsHotMaterialDeriveListV30Filtering
  * @throws IOException if the JSON string is invalid with respect to ToolsHotMaterialDeriveListV30Filtering
  */
  public static ToolsHotMaterialDeriveListV30Filtering fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ToolsHotMaterialDeriveListV30Filtering.class);
  }

 /**
  * Convert an instance of ToolsHotMaterialDeriveListV30Filtering to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

