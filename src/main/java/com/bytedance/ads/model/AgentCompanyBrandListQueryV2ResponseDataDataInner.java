/*
 * Oceanengine Open Api
 * 巨量引擎开放平台 Open Api
 *
 * The version of the OpenAPI document: 1.1.51
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bytedance.ads.model;

import java.util.Objects;
import java.util.Arrays;
import com.bytedance.ads.model.AgentCompanyBrandListQueryV2ResponseDataDataInnerCollaboratorsInner;
import com.bytedance.ads.model.AgentCompanyBrandListQueryV2ResponseDataDataInnerOptimizerDepartmentsInner;
import com.bytedance.ads.model.AgentCompanyBrandListQueryV2ResponseDataDataInnerOptimizersInner;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.bytedance.ads.JSON;

/**
 * AgentCompanyBrandListQueryV2ResponseDataDataInner
 */
@javax.annotation.Generated(value = "com.org.bytedance.ad_open_sdk.JavacusGenerator", date = "2025-05-14T20:09:43.986095598+08:00[Asia/Shanghai]")
public class AgentCompanyBrandListQueryV2ResponseDataDataInner {
  public static final String SERIALIZED_NAME_AGENT_CASH_COST = "agent_cash_cost";
  @SerializedName(SERIALIZED_NAME_AGENT_CASH_COST)
  private Long agentCashCost = null;

  public static final String SERIALIZED_NAME_AGENT_GRANT_COST = "agent_grant_cost";
  @SerializedName(SERIALIZED_NAME_AGENT_GRANT_COST)
  private Long agentGrantCost = null;

  public static final String SERIALIZED_NAME_COLLABORATORS = "collaborators";
  @SerializedName(SERIALIZED_NAME_COLLABORATORS)
  private List<AgentCompanyBrandListQueryV2ResponseDataDataInnerCollaboratorsInner> collaborators = null;

  public static final String SERIALIZED_NAME_COMPANY_BALANCE = "company_balance";
  @SerializedName(SERIALIZED_NAME_COMPANY_BALANCE)
  private Long companyBalance = null;

  public static final String SERIALIZED_NAME_COMPANY_GRANT_BALANCE = "company_grant_balance";
  @SerializedName(SERIALIZED_NAME_COMPANY_GRANT_BALANCE)
  private Long companyGrantBalance = null;

  public static final String SERIALIZED_NAME_COMPANY_ID = "company_id";
  @SerializedName(SERIALIZED_NAME_COMPANY_ID)
  private Long companyId = null;

  public static final String SERIALIZED_NAME_COMPANY_NAME = "company_name";
  @SerializedName(SERIALIZED_NAME_COMPANY_NAME)
  private String companyName = null;

  public static final String SERIALIZED_NAME_COMPANY_NON_GRANT_BALANCE = "company_non_grant_balance";
  @SerializedName(SERIALIZED_NAME_COMPANY_NON_GRANT_BALANCE)
  private Long companyNonGrantBalance = null;

  public static final String SERIALIZED_NAME_COMPANY_VALID_BALANCE = "company_valid_balance";
  @SerializedName(SERIALIZED_NAME_COMPANY_VALID_BALANCE)
  private Long companyValidBalance = null;

  public static final String SERIALIZED_NAME_OPTIMIZER_DEPARTMENTS = "optimizer_departments";
  @SerializedName(SERIALIZED_NAME_OPTIMIZER_DEPARTMENTS)
  private List<AgentCompanyBrandListQueryV2ResponseDataDataInnerOptimizerDepartmentsInner> optimizerDepartments = null;

  public static final String SERIALIZED_NAME_OPTIMIZERS = "optimizers";
  @SerializedName(SERIALIZED_NAME_OPTIMIZERS)
  private List<AgentCompanyBrandListQueryV2ResponseDataDataInnerOptimizersInner> optimizers = null;

  public static final String SERIALIZED_NAME_STAT_COST = "stat_cost";
  @SerializedName(SERIALIZED_NAME_STAT_COST)
  private Long statCost = null;

  public AgentCompanyBrandListQueryV2ResponseDataDataInner() {
  }

  public AgentCompanyBrandListQueryV2ResponseDataDataInner agentCashCost(Long agentCashCost) {
    
    this.agentCashCost = agentCashCost;
    return this;
  }

   /**
   * 品牌非赠款消耗
   * @return agentCashCost
  **/
  @javax.annotation.Nullable
  public Long getAgentCashCost() {
    return agentCashCost;
  }


  public void setAgentCashCost(Long agentCashCost) {
    this.agentCashCost = agentCashCost;
  }


  public AgentCompanyBrandListQueryV2ResponseDataDataInner agentGrantCost(Long agentGrantCost) {
    
    this.agentGrantCost = agentGrantCost;
    return this;
  }

   /**
   * 品牌赠款消耗
   * @return agentGrantCost
  **/
  @javax.annotation.Nullable
  public Long getAgentGrantCost() {
    return agentGrantCost;
  }


  public void setAgentGrantCost(Long agentGrantCost) {
    this.agentGrantCost = agentGrantCost;
  }


  public AgentCompanyBrandListQueryV2ResponseDataDataInner collaborators(List<AgentCompanyBrandListQueryV2ResponseDataDataInnerCollaboratorsInner> collaborators) {
    
    this.collaborators = collaborators;
    return this;
  }

  public AgentCompanyBrandListQueryV2ResponseDataDataInner addCollaboratorsItem(AgentCompanyBrandListQueryV2ResponseDataDataInnerCollaboratorsInner collaboratorsItem) {
    if (this.collaborators == null) {
      this.collaborators = new ArrayList<>();
    }
    this.collaborators.add(collaboratorsItem);
    return this;
  }

   /**
   * 协作者
   * @return collaborators
  **/
  @javax.annotation.Nullable
  public List<AgentCompanyBrandListQueryV2ResponseDataDataInnerCollaboratorsInner> getCollaborators() {
    return collaborators;
  }


  public void setCollaborators(List<AgentCompanyBrandListQueryV2ResponseDataDataInnerCollaboratorsInner> collaborators) {
    this.collaborators = collaborators;
  }


  public AgentCompanyBrandListQueryV2ResponseDataDataInner companyBalance(Long companyBalance) {
    
    this.companyBalance = companyBalance;
    return this;
  }

   /**
   * 总余额
   * @return companyBalance
  **/
  @javax.annotation.Nullable
  public Long getCompanyBalance() {
    return companyBalance;
  }


  public void setCompanyBalance(Long companyBalance) {
    this.companyBalance = companyBalance;
  }


  public AgentCompanyBrandListQueryV2ResponseDataDataInner companyGrantBalance(Long companyGrantBalance) {
    
    this.companyGrantBalance = companyGrantBalance;
    return this;
  }

   /**
   * 总品牌赠款可用余额
   * @return companyGrantBalance
  **/
  @javax.annotation.Nullable
  public Long getCompanyGrantBalance() {
    return companyGrantBalance;
  }


  public void setCompanyGrantBalance(Long companyGrantBalance) {
    this.companyGrantBalance = companyGrantBalance;
  }


  public AgentCompanyBrandListQueryV2ResponseDataDataInner companyId(Long companyId) {
    
    this.companyId = companyId;
    return this;
  }

   /**
   * 广告主公司ID
   * @return companyId
  **/
  @javax.annotation.Nullable
  public Long getCompanyId() {
    return companyId;
  }


  public void setCompanyId(Long companyId) {
    this.companyId = companyId;
  }


  public AgentCompanyBrandListQueryV2ResponseDataDataInner companyName(String companyName) {
    
    this.companyName = companyName;
    return this;
  }

   /**
   * 广告主公司名称
   * @return companyName
  **/
  @javax.annotation.Nullable
  public String getCompanyName() {
    return companyName;
  }


  public void setCompanyName(String companyName) {
    this.companyName = companyName;
  }


  public AgentCompanyBrandListQueryV2ResponseDataDataInner companyNonGrantBalance(Long companyNonGrantBalance) {
    
    this.companyNonGrantBalance = companyNonGrantBalance;
    return this;
  }

   /**
   * 总品牌非赠款可用余额
   * @return companyNonGrantBalance
  **/
  @javax.annotation.Nullable
  public Long getCompanyNonGrantBalance() {
    return companyNonGrantBalance;
  }


  public void setCompanyNonGrantBalance(Long companyNonGrantBalance) {
    this.companyNonGrantBalance = companyNonGrantBalance;
  }


  public AgentCompanyBrandListQueryV2ResponseDataDataInner companyValidBalance(Long companyValidBalance) {
    
    this.companyValidBalance = companyValidBalance;
    return this;
  }

   /**
   * 总品牌可用余额
   * @return companyValidBalance
  **/
  @javax.annotation.Nullable
  public Long getCompanyValidBalance() {
    return companyValidBalance;
  }


  public void setCompanyValidBalance(Long companyValidBalance) {
    this.companyValidBalance = companyValidBalance;
  }


  public AgentCompanyBrandListQueryV2ResponseDataDataInner optimizerDepartments(List<AgentCompanyBrandListQueryV2ResponseDataDataInnerOptimizerDepartmentsInner> optimizerDepartments) {
    
    this.optimizerDepartments = optimizerDepartments;
    return this;
  }

  public AgentCompanyBrandListQueryV2ResponseDataDataInner addOptimizerDepartmentsItem(AgentCompanyBrandListQueryV2ResponseDataDataInnerOptimizerDepartmentsInner optimizerDepartmentsItem) {
    if (this.optimizerDepartments == null) {
      this.optimizerDepartments = new ArrayList<>();
    }
    this.optimizerDepartments.add(optimizerDepartmentsItem);
    return this;
  }

   /**
   * 
   * @return optimizerDepartments
  **/
  @javax.annotation.Nullable
  public List<AgentCompanyBrandListQueryV2ResponseDataDataInnerOptimizerDepartmentsInner> getOptimizerDepartments() {
    return optimizerDepartments;
  }


  public void setOptimizerDepartments(List<AgentCompanyBrandListQueryV2ResponseDataDataInnerOptimizerDepartmentsInner> optimizerDepartments) {
    this.optimizerDepartments = optimizerDepartments;
  }


  public AgentCompanyBrandListQueryV2ResponseDataDataInner optimizers(List<AgentCompanyBrandListQueryV2ResponseDataDataInnerOptimizersInner> optimizers) {
    
    this.optimizers = optimizers;
    return this;
  }

  public AgentCompanyBrandListQueryV2ResponseDataDataInner addOptimizersItem(AgentCompanyBrandListQueryV2ResponseDataDataInnerOptimizersInner optimizersItem) {
    if (this.optimizers == null) {
      this.optimizers = new ArrayList<>();
    }
    this.optimizers.add(optimizersItem);
    return this;
  }

   /**
   * 负责人
   * @return optimizers
  **/
  @javax.annotation.Nullable
  public List<AgentCompanyBrandListQueryV2ResponseDataDataInnerOptimizersInner> getOptimizers() {
    return optimizers;
  }


  public void setOptimizers(List<AgentCompanyBrandListQueryV2ResponseDataDataInnerOptimizersInner> optimizers) {
    this.optimizers = optimizers;
  }


  public AgentCompanyBrandListQueryV2ResponseDataDataInner statCost(Long statCost) {
    
    this.statCost = statCost;
    return this;
  }

   /**
   * 品牌消耗
   * @return statCost
  **/
  @javax.annotation.Nullable
  public Long getStatCost() {
    return statCost;
  }


  public void setStatCost(Long statCost) {
    this.statCost = statCost;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AgentCompanyBrandListQueryV2ResponseDataDataInner agentCompanyBrandListQueryV2ResponseDataDataInner = (AgentCompanyBrandListQueryV2ResponseDataDataInner) o;
    return Objects.equals(this.agentCashCost, agentCompanyBrandListQueryV2ResponseDataDataInner.agentCashCost) &&
        Objects.equals(this.agentGrantCost, agentCompanyBrandListQueryV2ResponseDataDataInner.agentGrantCost) &&
        Objects.equals(this.collaborators, agentCompanyBrandListQueryV2ResponseDataDataInner.collaborators) &&
        Objects.equals(this.companyBalance, agentCompanyBrandListQueryV2ResponseDataDataInner.companyBalance) &&
        Objects.equals(this.companyGrantBalance, agentCompanyBrandListQueryV2ResponseDataDataInner.companyGrantBalance) &&
        Objects.equals(this.companyId, agentCompanyBrandListQueryV2ResponseDataDataInner.companyId) &&
        Objects.equals(this.companyName, agentCompanyBrandListQueryV2ResponseDataDataInner.companyName) &&
        Objects.equals(this.companyNonGrantBalance, agentCompanyBrandListQueryV2ResponseDataDataInner.companyNonGrantBalance) &&
        Objects.equals(this.companyValidBalance, agentCompanyBrandListQueryV2ResponseDataDataInner.companyValidBalance) &&
        Objects.equals(this.optimizerDepartments, agentCompanyBrandListQueryV2ResponseDataDataInner.optimizerDepartments) &&
        Objects.equals(this.optimizers, agentCompanyBrandListQueryV2ResponseDataDataInner.optimizers) &&
        Objects.equals(this.statCost, agentCompanyBrandListQueryV2ResponseDataDataInner.statCost);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(agentCashCost, agentGrantCost, collaborators, companyBalance, companyGrantBalance, companyId, companyName, companyNonGrantBalance, companyValidBalance, optimizerDepartments, optimizers, statCost);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AgentCompanyBrandListQueryV2ResponseDataDataInner {\n");
    sb.append("    agentCashCost: ").append(toIndentedString(agentCashCost)).append("\n");
    sb.append("    agentGrantCost: ").append(toIndentedString(agentGrantCost)).append("\n");
    sb.append("    collaborators: ").append(toIndentedString(collaborators)).append("\n");
    sb.append("    companyBalance: ").append(toIndentedString(companyBalance)).append("\n");
    sb.append("    companyGrantBalance: ").append(toIndentedString(companyGrantBalance)).append("\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    companyName: ").append(toIndentedString(companyName)).append("\n");
    sb.append("    companyNonGrantBalance: ").append(toIndentedString(companyNonGrantBalance)).append("\n");
    sb.append("    companyValidBalance: ").append(toIndentedString(companyValidBalance)).append("\n");
    sb.append("    optimizerDepartments: ").append(toIndentedString(optimizerDepartments)).append("\n");
    sb.append("    optimizers: ").append(toIndentedString(optimizers)).append("\n");
    sb.append("    statCost: ").append(toIndentedString(statCost)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("agent_cash_cost");
    openapiFields.add("agent_grant_cost");
    openapiFields.add("collaborators");
    openapiFields.add("company_balance");
    openapiFields.add("company_grant_balance");
    openapiFields.add("company_id");
    openapiFields.add("company_name");
    openapiFields.add("company_non_grant_balance");
    openapiFields.add("company_valid_balance");
    openapiFields.add("optimizer_departments");
    openapiFields.add("optimizers");
    openapiFields.add("stat_cost");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }


  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AgentCompanyBrandListQueryV2ResponseDataDataInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AgentCompanyBrandListQueryV2ResponseDataDataInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AgentCompanyBrandListQueryV2ResponseDataDataInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AgentCompanyBrandListQueryV2ResponseDataDataInner.class));

       return (TypeAdapter<T>) new TypeAdapter<AgentCompanyBrandListQueryV2ResponseDataDataInner>() {
           @Override
           public void write(JsonWriter out, AgentCompanyBrandListQueryV2ResponseDataDataInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AgentCompanyBrandListQueryV2ResponseDataDataInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AgentCompanyBrandListQueryV2ResponseDataDataInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AgentCompanyBrandListQueryV2ResponseDataDataInner
  * @throws IOException if the JSON string is invalid with respect to AgentCompanyBrandListQueryV2ResponseDataDataInner
  */
  public static AgentCompanyBrandListQueryV2ResponseDataDataInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AgentCompanyBrandListQueryV2ResponseDataDataInner.class);
  }

 /**
  * Convert an instance of AgentCompanyBrandListQueryV2ResponseDataDataInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

