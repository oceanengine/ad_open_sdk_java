/*
 * Oceanengine Open Api
 * 巨量引擎开放平台 Open Api
 *
 * The version of the OpenAPI document: 1.1.52
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bytedance.ads.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.bytedance.ads.JSON;

/**
 * 素材信息
 */
@javax.annotation.Generated(value = "com.org.bytedance.ad_open_sdk.JavacusGenerator", date = "2025-05-16T11:39:28.293588012+08:00[Asia/Shanghai]")
public class ToolsHotMaterialDeriveAdoptV30ResponseDataResultsInnerMaterialInfo {
  public static final String SERIALIZED_NAME_COVER_URL = "cover_url";
  @SerializedName(SERIALIZED_NAME_COVER_URL)
  private String coverUrl = null;

  public static final String SERIALIZED_NAME_DURATION = "duration";
  @SerializedName(SERIALIZED_NAME_DURATION)
  private Double duration = null;

  public static final String SERIALIZED_NAME_FILE_NAME = "file_name";
  @SerializedName(SERIALIZED_NAME_FILE_NAME)
  private String fileName = null;

  public static final String SERIALIZED_NAME_IMAGE_MODE = "image_mode";
  @SerializedName(SERIALIZED_NAME_IMAGE_MODE)
  private Long imageMode = null;

  public static final String SERIALIZED_NAME_MATERIAL_ID = "material_id";
  @SerializedName(SERIALIZED_NAME_MATERIAL_ID)
  private Long materialId = null;

  public static final String SERIALIZED_NAME_VID = "vid";
  @SerializedName(SERIALIZED_NAME_VID)
  private String vid = null;

  public static final String SERIALIZED_NAME_VIDEO_URL = "video_url";
  @SerializedName(SERIALIZED_NAME_VIDEO_URL)
  private String videoUrl = null;

  public ToolsHotMaterialDeriveAdoptV30ResponseDataResultsInnerMaterialInfo() {
  }

  public ToolsHotMaterialDeriveAdoptV30ResponseDataResultsInnerMaterialInfo coverUrl(String coverUrl) {
    
    this.coverUrl = coverUrl;
    return this;
  }

   /**
   * 
   * @return coverUrl
  **/
  @javax.annotation.Nullable
  public String getCoverUrl() {
    return coverUrl;
  }


  public void setCoverUrl(String coverUrl) {
    this.coverUrl = coverUrl;
  }


  public ToolsHotMaterialDeriveAdoptV30ResponseDataResultsInnerMaterialInfo duration(Double duration) {
    
    this.duration = duration;
    return this;
  }

   /**
   * 
   * @return duration
  **/
  @javax.annotation.Nullable
  public Double getDuration() {
    return duration;
  }


  public void setDuration(Double duration) {
    this.duration = duration;
  }


  public ToolsHotMaterialDeriveAdoptV30ResponseDataResultsInnerMaterialInfo fileName(String fileName) {
    
    this.fileName = fileName;
    return this;
  }

   /**
   * 
   * @return fileName
  **/
  @javax.annotation.Nullable
  public String getFileName() {
    return fileName;
  }


  public void setFileName(String fileName) {
    this.fileName = fileName;
  }


  public ToolsHotMaterialDeriveAdoptV30ResponseDataResultsInnerMaterialInfo imageMode(Long imageMode) {
    
    this.imageMode = imageMode;
    return this;
  }

   /**
   * 
   * @return imageMode
  **/
  @javax.annotation.Nullable
  public Long getImageMode() {
    return imageMode;
  }


  public void setImageMode(Long imageMode) {
    this.imageMode = imageMode;
  }


  public ToolsHotMaterialDeriveAdoptV30ResponseDataResultsInnerMaterialInfo materialId(Long materialId) {
    
    this.materialId = materialId;
    return this;
  }

   /**
   * 
   * @return materialId
  **/
  @javax.annotation.Nullable
  public Long getMaterialId() {
    return materialId;
  }


  public void setMaterialId(Long materialId) {
    this.materialId = materialId;
  }


  public ToolsHotMaterialDeriveAdoptV30ResponseDataResultsInnerMaterialInfo vid(String vid) {
    
    this.vid = vid;
    return this;
  }

   /**
   * 
   * @return vid
  **/
  @javax.annotation.Nullable
  public String getVid() {
    return vid;
  }


  public void setVid(String vid) {
    this.vid = vid;
  }


  public ToolsHotMaterialDeriveAdoptV30ResponseDataResultsInnerMaterialInfo videoUrl(String videoUrl) {
    
    this.videoUrl = videoUrl;
    return this;
  }

   /**
   * 
   * @return videoUrl
  **/
  @javax.annotation.Nullable
  public String getVideoUrl() {
    return videoUrl;
  }


  public void setVideoUrl(String videoUrl) {
    this.videoUrl = videoUrl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ToolsHotMaterialDeriveAdoptV30ResponseDataResultsInnerMaterialInfo toolsHotMaterialDeriveAdoptV30ResponseDataResultsInnerMaterialInfo = (ToolsHotMaterialDeriveAdoptV30ResponseDataResultsInnerMaterialInfo) o;
    return Objects.equals(this.coverUrl, toolsHotMaterialDeriveAdoptV30ResponseDataResultsInnerMaterialInfo.coverUrl) &&
        Objects.equals(this.duration, toolsHotMaterialDeriveAdoptV30ResponseDataResultsInnerMaterialInfo.duration) &&
        Objects.equals(this.fileName, toolsHotMaterialDeriveAdoptV30ResponseDataResultsInnerMaterialInfo.fileName) &&
        Objects.equals(this.imageMode, toolsHotMaterialDeriveAdoptV30ResponseDataResultsInnerMaterialInfo.imageMode) &&
        Objects.equals(this.materialId, toolsHotMaterialDeriveAdoptV30ResponseDataResultsInnerMaterialInfo.materialId) &&
        Objects.equals(this.vid, toolsHotMaterialDeriveAdoptV30ResponseDataResultsInnerMaterialInfo.vid) &&
        Objects.equals(this.videoUrl, toolsHotMaterialDeriveAdoptV30ResponseDataResultsInnerMaterialInfo.videoUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(coverUrl, duration, fileName, imageMode, materialId, vid, videoUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ToolsHotMaterialDeriveAdoptV30ResponseDataResultsInnerMaterialInfo {\n");
    sb.append("    coverUrl: ").append(toIndentedString(coverUrl)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
    sb.append("    imageMode: ").append(toIndentedString(imageMode)).append("\n");
    sb.append("    materialId: ").append(toIndentedString(materialId)).append("\n");
    sb.append("    vid: ").append(toIndentedString(vid)).append("\n");
    sb.append("    videoUrl: ").append(toIndentedString(videoUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cover_url");
    openapiFields.add("duration");
    openapiFields.add("file_name");
    openapiFields.add("image_mode");
    openapiFields.add("material_id");
    openapiFields.add("vid");
    openapiFields.add("video_url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("cover_url");
    openapiRequiredFields.add("duration");
    openapiRequiredFields.add("file_name");
    openapiRequiredFields.add("image_mode");
    openapiRequiredFields.add("material_id");
    openapiRequiredFields.add("vid");
    openapiRequiredFields.add("video_url");
  }


  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ToolsHotMaterialDeriveAdoptV30ResponseDataResultsInnerMaterialInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ToolsHotMaterialDeriveAdoptV30ResponseDataResultsInnerMaterialInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ToolsHotMaterialDeriveAdoptV30ResponseDataResultsInnerMaterialInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ToolsHotMaterialDeriveAdoptV30ResponseDataResultsInnerMaterialInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<ToolsHotMaterialDeriveAdoptV30ResponseDataResultsInnerMaterialInfo>() {
           @Override
           public void write(JsonWriter out, ToolsHotMaterialDeriveAdoptV30ResponseDataResultsInnerMaterialInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ToolsHotMaterialDeriveAdoptV30ResponseDataResultsInnerMaterialInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ToolsHotMaterialDeriveAdoptV30ResponseDataResultsInnerMaterialInfo given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ToolsHotMaterialDeriveAdoptV30ResponseDataResultsInnerMaterialInfo
  * @throws IOException if the JSON string is invalid with respect to ToolsHotMaterialDeriveAdoptV30ResponseDataResultsInnerMaterialInfo
  */
  public static ToolsHotMaterialDeriveAdoptV30ResponseDataResultsInnerMaterialInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ToolsHotMaterialDeriveAdoptV30ResponseDataResultsInnerMaterialInfo.class);
  }

 /**
  * Convert an instance of ToolsHotMaterialDeriveAdoptV30ResponseDataResultsInnerMaterialInfo to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

