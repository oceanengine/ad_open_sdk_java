/*
 * Oceanengine Open Api
 * 巨量引擎开放平台 Open Api
 *
 * The version of the OpenAPI document: 1.1.65
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bytedance.ads.model;

import java.util.Objects;
import java.util.Arrays;
import com.bytedance.ads.model.BrandMaterialUpdateV30LbsLbsType;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.bytedance.ads.JSON;

/**
 * LBS
 */
@javax.annotation.Generated(value = "com.org.bytedance.ad_open_sdk.JavacusGenerator", date = "2025-08-08T17:05:37.008804984+08:00[Asia/Shanghai]")
public class BrandMaterialUpdateV30RequestLbs {
  public static final String SERIALIZED_NAME_LBS_TYPE = "lbs_type";
  @SerializedName(SERIALIZED_NAME_LBS_TYPE)
  private BrandMaterialUpdateV30LbsLbsType lbsType = null;

  public static final String SERIALIZED_NAME_LIFE_ACCOUNT_ID = "life_account_id";
  @SerializedName(SERIALIZED_NAME_LIFE_ACCOUNT_ID)
  private String lifeAccountId = null;

  public static final String SERIALIZED_NAME_LIFE_POI_ID_LIST = "life_poi_id_list";
  @SerializedName(SERIALIZED_NAME_LIFE_POI_ID_LIST)
  private List<String> lifePoiIdList = null;

  public BrandMaterialUpdateV30RequestLbs() {
  }

  public BrandMaterialUpdateV30RequestLbs lbsType(BrandMaterialUpdateV30LbsLbsType lbsType) {
    
    this.lbsType = lbsType;
    return this;
  }

   /**
   * Get lbsType
   * @return lbsType
  **/
  @javax.annotation.Nullable
  public BrandMaterialUpdateV30LbsLbsType getLbsType() {
    return lbsType;
  }


  public void setLbsType(BrandMaterialUpdateV30LbsLbsType lbsType) {
    this.lbsType = lbsType;
  }


  public BrandMaterialUpdateV30RequestLbs lifeAccountId(String lifeAccountId) {
    
    this.lifeAccountId = lifeAccountId;
    return this;
  }

   /**
   * 来客账号ID
   * @return lifeAccountId
  **/
  @javax.annotation.Nullable
  public String getLifeAccountId() {
    return lifeAccountId;
  }


  public void setLifeAccountId(String lifeAccountId) {
    this.lifeAccountId = lifeAccountId;
  }


  public BrandMaterialUpdateV30RequestLbs lifePoiIdList(List<String> lifePoiIdList) {
    
    this.lifePoiIdList = lifePoiIdList;
    return this;
  }

  public BrandMaterialUpdateV30RequestLbs addLifePoiIdListItem(String lifePoiIdListItem) {
    if (this.lifePoiIdList == null) {
      this.lifePoiIdList = new ArrayList<>();
    }
    this.lifePoiIdList.add(lifePoiIdListItem);
    return this;
  }

   /**
   * 门店ID列表
   * @return lifePoiIdList
  **/
  @javax.annotation.Nullable
  public List<String> getLifePoiIdList() {
    return lifePoiIdList;
  }


  public void setLifePoiIdList(List<String> lifePoiIdList) {
    this.lifePoiIdList = lifePoiIdList;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BrandMaterialUpdateV30RequestLbs brandMaterialUpdateV30RequestLbs = (BrandMaterialUpdateV30RequestLbs) o;
    return Objects.equals(this.lbsType, brandMaterialUpdateV30RequestLbs.lbsType) &&
        Objects.equals(this.lifeAccountId, brandMaterialUpdateV30RequestLbs.lifeAccountId) &&
        Objects.equals(this.lifePoiIdList, brandMaterialUpdateV30RequestLbs.lifePoiIdList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lbsType, lifeAccountId, lifePoiIdList);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BrandMaterialUpdateV30RequestLbs {\n");
    sb.append("    lbsType: ").append(toIndentedString(lbsType)).append("\n");
    sb.append("    lifeAccountId: ").append(toIndentedString(lifeAccountId)).append("\n");
    sb.append("    lifePoiIdList: ").append(toIndentedString(lifePoiIdList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("lbs_type");
    openapiFields.add("life_account_id");
    openapiFields.add("life_poi_id_list");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }


  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BrandMaterialUpdateV30RequestLbs.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BrandMaterialUpdateV30RequestLbs' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BrandMaterialUpdateV30RequestLbs> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BrandMaterialUpdateV30RequestLbs.class));

       return (TypeAdapter<T>) new TypeAdapter<BrandMaterialUpdateV30RequestLbs>() {
           @Override
           public void write(JsonWriter out, BrandMaterialUpdateV30RequestLbs value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BrandMaterialUpdateV30RequestLbs read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of BrandMaterialUpdateV30RequestLbs given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of BrandMaterialUpdateV30RequestLbs
  * @throws IOException if the JSON string is invalid with respect to BrandMaterialUpdateV30RequestLbs
  */
  public static BrandMaterialUpdateV30RequestLbs fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BrandMaterialUpdateV30RequestLbs.class);
  }

 /**
  * Convert an instance of BrandMaterialUpdateV30RequestLbs to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

