/*
 * Oceanengine Open Api
 * 巨量引擎开放平台 Open Api
 *
 * The version of the OpenAPI document: 1.1.70
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bytedance.ads.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * 
 */
@JsonAdapter(ToolsEstimateAudienceV2ArticleCategory.Adapter.class)
public enum ToolsEstimateAudienceV2ArticleCategory {
  
  PHOTOGRAPHY("PHOTOGRAPHY"),
  
  ENTERTAINMENT("ENTERTAINMENT"),
  
  INTERNATIONAL("INTERNATIONAL"),
  
  PARENTING("PARENTING"),
  
  SCIENCE("SCIENCE"),
  
  MOVIE("MOVIE"),
  
  EXPLORE("EXPLORE"),
  
  CULTURE("CULTURE"),
  
  CONSTELLATION("CONSTELLATION"),
  
  FASHION("FASHION"),
  
  RUMOR_CRACKER("RUMOR_CRACKER"),
  
  GOVERNMENT("GOVERNMENT"),
  
  TECHNOLOGY("TECHNOLOGY"),
  
  HEALTH("HEALTH"),
  
  TIPS("TIPS"),
  
  GOURMET("GOURMET"),
  
  REGIMEN("REGIMEN"),
  
  BUSINESS("BUSINESS"),
  
  FINANCE("FINANCE"),
  
  TRAVEL("TRAVEL"),
  
  LOCAL("LOCAL"),
  
  WORKPLACE("WORKPLACE"),
  
  SPORTS("SPORTS"),
  
  MILITARY("MILITARY"),
  
  ESSAY("ESSAY"),
  
  COMICS("COMICS"),
  
  DIGITAL("DIGITAL"),
  
  FREAK("FREAK"),
  
  EMOTION("EMOTION"),
  
  GAMES("GAMES"),
  
  AMUSEMENT("AMUSEMENT"),
  
  GRADUATES("GRADUATES"),
  
  HOME("HOME"),
  
  COLLECTION("COLLECTION"),
  
  SOCIETY("SOCIETY"),
  
  STORIES("STORIES"),
  
  ESTATE("ESTATE"),
  
  LAWS("LAWS"),
  
  HISTORY("HISTORY"),
  
  WEIGHT_LOSING("WEIGHT_LOSING"),
  
  ANIMATION("ANIMATION"),
  
  PETS("PETS"),
  
  CARS("CARS"),
  
  EDUCATION("EDUCATION"),
  
  DESIGN("DESIGN");

  private String value;

  ToolsEstimateAudienceV2ArticleCategory(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static ToolsEstimateAudienceV2ArticleCategory fromValue(String value) {
    for (ToolsEstimateAudienceV2ArticleCategory b : ToolsEstimateAudienceV2ArticleCategory.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<ToolsEstimateAudienceV2ArticleCategory> {
    @Override
    public void write(final JsonWriter jsonWriter, final ToolsEstimateAudienceV2ArticleCategory enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public ToolsEstimateAudienceV2ArticleCategory read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return ToolsEstimateAudienceV2ArticleCategory.fromValue(value);
    }
  }
}

