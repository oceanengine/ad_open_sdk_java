/*
 * Oceanengine Open Api
 * 巨量引擎开放平台 Open Api
 *
 * The version of the OpenAPI document: 1.1.66
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bytedance.ads.model;

import java.util.Objects;
import java.util.Arrays;
import com.bytedance.ads.model.LocalFileVideoGetV30DataVideoListImageMode;
import com.bytedance.ads.model.LocalFileVideoGetV30DataVideoListMaterialProperties;
import com.bytedance.ads.model.LocalFileVideoGetV30DataVideoListSource;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.bytedance.ads.JSON;

/**
 * LocalFileVideoGetV30ResponseDataVideoListInner
 */
@javax.annotation.Generated(value = "com.org.bytedance.ad_open_sdk.JavacusGenerator", date = "2025-08-08T17:48:09.460869083+08:00[Asia/Shanghai]")
public class LocalFileVideoGetV30ResponseDataVideoListInner {
  public static final String SERIALIZED_NAME_CREATE_TIME = "create_time";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime = null;

  public static final String SERIALIZED_NAME_DURATION = "duration";
  @SerializedName(SERIALIZED_NAME_DURATION)
  private Double duration = null;

  public static final String SERIALIZED_NAME_IMAGE_MODE = "image_mode";
  @SerializedName(SERIALIZED_NAME_IMAGE_MODE)
  private LocalFileVideoGetV30DataVideoListImageMode imageMode = null;

  public static final String SERIALIZED_NAME_MATERIAL_ID = "material_id";
  @SerializedName(SERIALIZED_NAME_MATERIAL_ID)
  private Long materialId = null;

  public static final String SERIALIZED_NAME_MATERIAL_PROPERTIES = "material_properties";
  @SerializedName(SERIALIZED_NAME_MATERIAL_PROPERTIES)
  private List<LocalFileVideoGetV30DataVideoListMaterialProperties> materialProperties = null;

  public static final String SERIALIZED_NAME_POSTER_URL = "poster_url";
  @SerializedName(SERIALIZED_NAME_POSTER_URL)
  private String posterUrl = null;

  public static final String SERIALIZED_NAME_SIGNATURE = "signature";
  @SerializedName(SERIALIZED_NAME_SIGNATURE)
  private String signature = null;

  public static final String SERIALIZED_NAME_SOURCE = "source";
  @SerializedName(SERIALIZED_NAME_SOURCE)
  private LocalFileVideoGetV30DataVideoListSource source = null;

  public static final String SERIALIZED_NAME_VIDEO_ID = "video_id";
  @SerializedName(SERIALIZED_NAME_VIDEO_ID)
  private String videoId = null;

  public static final String SERIALIZED_NAME_VIDEO_NAME = "video_name";
  @SerializedName(SERIALIZED_NAME_VIDEO_NAME)
  private String videoName = null;

  public static final String SERIALIZED_NAME_VIDEO_URL = "video_url";
  @SerializedName(SERIALIZED_NAME_VIDEO_URL)
  private String videoUrl = null;

  public LocalFileVideoGetV30ResponseDataVideoListInner() {
  }

  public LocalFileVideoGetV30ResponseDataVideoListInner createTime(String createTime) {
    
    this.createTime = createTime;
    return this;
  }

   /**
   * 
   * @return createTime
  **/
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }


  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }


  public LocalFileVideoGetV30ResponseDataVideoListInner duration(Double duration) {
    
    this.duration = duration;
    return this;
  }

   /**
   * 
   * @return duration
  **/
  @javax.annotation.Nullable
  public Double getDuration() {
    return duration;
  }


  public void setDuration(Double duration) {
    this.duration = duration;
  }


  public LocalFileVideoGetV30ResponseDataVideoListInner imageMode(LocalFileVideoGetV30DataVideoListImageMode imageMode) {
    
    this.imageMode = imageMode;
    return this;
  }

   /**
   * Get imageMode
   * @return imageMode
  **/
  @javax.annotation.Nullable
  public LocalFileVideoGetV30DataVideoListImageMode getImageMode() {
    return imageMode;
  }


  public void setImageMode(LocalFileVideoGetV30DataVideoListImageMode imageMode) {
    this.imageMode = imageMode;
  }


  public LocalFileVideoGetV30ResponseDataVideoListInner materialId(Long materialId) {
    
    this.materialId = materialId;
    return this;
  }

   /**
   * 
   * @return materialId
  **/
  @javax.annotation.Nullable
  public Long getMaterialId() {
    return materialId;
  }


  public void setMaterialId(Long materialId) {
    this.materialId = materialId;
  }


  public LocalFileVideoGetV30ResponseDataVideoListInner materialProperties(List<LocalFileVideoGetV30DataVideoListMaterialProperties> materialProperties) {
    
    this.materialProperties = materialProperties;
    return this;
  }

  public LocalFileVideoGetV30ResponseDataVideoListInner addMaterialPropertiesItem(LocalFileVideoGetV30DataVideoListMaterialProperties materialPropertiesItem) {
    if (this.materialProperties == null) {
      this.materialProperties = new ArrayList<>();
    }
    this.materialProperties.add(materialPropertiesItem);
    return this;
  }

   /**
   * 
   * @return materialProperties
  **/
  @javax.annotation.Nullable
  public List<LocalFileVideoGetV30DataVideoListMaterialProperties> getMaterialProperties() {
    return materialProperties;
  }


  public void setMaterialProperties(List<LocalFileVideoGetV30DataVideoListMaterialProperties> materialProperties) {
    this.materialProperties = materialProperties;
  }


  public LocalFileVideoGetV30ResponseDataVideoListInner posterUrl(String posterUrl) {
    
    this.posterUrl = posterUrl;
    return this;
  }

   /**
   * 
   * @return posterUrl
  **/
  @javax.annotation.Nullable
  public String getPosterUrl() {
    return posterUrl;
  }


  public void setPosterUrl(String posterUrl) {
    this.posterUrl = posterUrl;
  }


  public LocalFileVideoGetV30ResponseDataVideoListInner signature(String signature) {
    
    this.signature = signature;
    return this;
  }

   /**
   * 
   * @return signature
  **/
  @javax.annotation.Nullable
  public String getSignature() {
    return signature;
  }


  public void setSignature(String signature) {
    this.signature = signature;
  }


  public LocalFileVideoGetV30ResponseDataVideoListInner source(LocalFileVideoGetV30DataVideoListSource source) {
    
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @javax.annotation.Nullable
  public LocalFileVideoGetV30DataVideoListSource getSource() {
    return source;
  }


  public void setSource(LocalFileVideoGetV30DataVideoListSource source) {
    this.source = source;
  }


  public LocalFileVideoGetV30ResponseDataVideoListInner videoId(String videoId) {
    
    this.videoId = videoId;
    return this;
  }

   /**
   * 
   * @return videoId
  **/
  @javax.annotation.Nullable
  public String getVideoId() {
    return videoId;
  }


  public void setVideoId(String videoId) {
    this.videoId = videoId;
  }


  public LocalFileVideoGetV30ResponseDataVideoListInner videoName(String videoName) {
    
    this.videoName = videoName;
    return this;
  }

   /**
   * 
   * @return videoName
  **/
  @javax.annotation.Nullable
  public String getVideoName() {
    return videoName;
  }


  public void setVideoName(String videoName) {
    this.videoName = videoName;
  }


  public LocalFileVideoGetV30ResponseDataVideoListInner videoUrl(String videoUrl) {
    
    this.videoUrl = videoUrl;
    return this;
  }

   /**
   * 
   * @return videoUrl
  **/
  @javax.annotation.Nullable
  public String getVideoUrl() {
    return videoUrl;
  }


  public void setVideoUrl(String videoUrl) {
    this.videoUrl = videoUrl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LocalFileVideoGetV30ResponseDataVideoListInner localFileVideoGetV30ResponseDataVideoListInner = (LocalFileVideoGetV30ResponseDataVideoListInner) o;
    return Objects.equals(this.createTime, localFileVideoGetV30ResponseDataVideoListInner.createTime) &&
        Objects.equals(this.duration, localFileVideoGetV30ResponseDataVideoListInner.duration) &&
        Objects.equals(this.imageMode, localFileVideoGetV30ResponseDataVideoListInner.imageMode) &&
        Objects.equals(this.materialId, localFileVideoGetV30ResponseDataVideoListInner.materialId) &&
        Objects.equals(this.materialProperties, localFileVideoGetV30ResponseDataVideoListInner.materialProperties) &&
        Objects.equals(this.posterUrl, localFileVideoGetV30ResponseDataVideoListInner.posterUrl) &&
        Objects.equals(this.signature, localFileVideoGetV30ResponseDataVideoListInner.signature) &&
        Objects.equals(this.source, localFileVideoGetV30ResponseDataVideoListInner.source) &&
        Objects.equals(this.videoId, localFileVideoGetV30ResponseDataVideoListInner.videoId) &&
        Objects.equals(this.videoName, localFileVideoGetV30ResponseDataVideoListInner.videoName) &&
        Objects.equals(this.videoUrl, localFileVideoGetV30ResponseDataVideoListInner.videoUrl);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(createTime, duration, imageMode, materialId, materialProperties, posterUrl, signature, source, videoId, videoName, videoUrl);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LocalFileVideoGetV30ResponseDataVideoListInner {\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    imageMode: ").append(toIndentedString(imageMode)).append("\n");
    sb.append("    materialId: ").append(toIndentedString(materialId)).append("\n");
    sb.append("    materialProperties: ").append(toIndentedString(materialProperties)).append("\n");
    sb.append("    posterUrl: ").append(toIndentedString(posterUrl)).append("\n");
    sb.append("    signature: ").append(toIndentedString(signature)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    videoId: ").append(toIndentedString(videoId)).append("\n");
    sb.append("    videoName: ").append(toIndentedString(videoName)).append("\n");
    sb.append("    videoUrl: ").append(toIndentedString(videoUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("create_time");
    openapiFields.add("duration");
    openapiFields.add("image_mode");
    openapiFields.add("material_id");
    openapiFields.add("material_properties");
    openapiFields.add("poster_url");
    openapiFields.add("signature");
    openapiFields.add("source");
    openapiFields.add("video_id");
    openapiFields.add("video_name");
    openapiFields.add("video_url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }


  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!LocalFileVideoGetV30ResponseDataVideoListInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'LocalFileVideoGetV30ResponseDataVideoListInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<LocalFileVideoGetV30ResponseDataVideoListInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(LocalFileVideoGetV30ResponseDataVideoListInner.class));

       return (TypeAdapter<T>) new TypeAdapter<LocalFileVideoGetV30ResponseDataVideoListInner>() {
           @Override
           public void write(JsonWriter out, LocalFileVideoGetV30ResponseDataVideoListInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public LocalFileVideoGetV30ResponseDataVideoListInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of LocalFileVideoGetV30ResponseDataVideoListInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of LocalFileVideoGetV30ResponseDataVideoListInner
  * @throws IOException if the JSON string is invalid with respect to LocalFileVideoGetV30ResponseDataVideoListInner
  */
  public static LocalFileVideoGetV30ResponseDataVideoListInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, LocalFileVideoGetV30ResponseDataVideoListInner.class);
  }

 /**
  * Convert an instance of LocalFileVideoGetV30ResponseDataVideoListInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

