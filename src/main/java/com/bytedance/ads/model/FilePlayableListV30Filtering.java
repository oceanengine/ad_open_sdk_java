/*
 * Oceanengine Open Api
 * 巨量引擎开放平台 Open Api
 *
 * The version of the OpenAPI document: 1.1.66
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bytedance.ads.model;

import java.util.Objects;
import java.util.Arrays;
import com.bytedance.ads.model.FilePlayableListV30FilteringAuditStatus;
import com.bytedance.ads.model.FilePlayableListV30FilteringStatus;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.bytedance.ads.JSON;

/**
 * 
 */
@javax.annotation.Generated(value = "com.org.bytedance.ad_open_sdk.JavacusGenerator", date = "2025-08-08T17:48:09.460869083+08:00[Asia/Shanghai]")
public class FilePlayableListV30Filtering {
  public static final String SERIALIZED_NAME_APP_IDS = "app_ids";
  @SerializedName(SERIALIZED_NAME_APP_IDS)
  private List<String> appIds = null;

  public static final String SERIALIZED_NAME_APP_MATERIAL_IDS = "app_material_ids";
  @SerializedName(SERIALIZED_NAME_APP_MATERIAL_IDS)
  private List<Long> appMaterialIds = null;

  public static final String SERIALIZED_NAME_AUDIT_STATUS = "audit_status";
  @SerializedName(SERIALIZED_NAME_AUDIT_STATUS)
  private FilePlayableListV30FilteringAuditStatus auditStatus = null;

  public static final String SERIALIZED_NAME_END_TIME = "end_time";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private String endTime = null;

  public static final String SERIALIZED_NAME_KEYWORD = "keyword";
  @SerializedName(SERIALIZED_NAME_KEYWORD)
  private String keyword = null;

  public static final String SERIALIZED_NAME_MATERIAL_IDS = "material_ids";
  @SerializedName(SERIALIZED_NAME_MATERIAL_IDS)
  private List<Long> materialIds = null;

  public static final String SERIALIZED_NAME_SIGNATURES = "signatures";
  @SerializedName(SERIALIZED_NAME_SIGNATURES)
  private List<String> signatures = null;

  public static final String SERIALIZED_NAME_START_TIME = "start_time";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private String startTime = null;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private FilePlayableListV30FilteringStatus status = null;

  public FilePlayableListV30Filtering() {
  }

  public FilePlayableListV30Filtering appIds(List<String> appIds) {
    
    this.appIds = appIds;
    return this;
  }

  public FilePlayableListV30Filtering addAppIdsItem(String appIdsItem) {
    if (this.appIds == null) {
      this.appIds = new ArrayList<>();
    }
    this.appIds.add(appIdsItem);
    return this;
  }

   /**
   * 直玩-应用id列表，试玩不生效
   * @return appIds
  **/
  @javax.annotation.Nullable
  public List<String> getAppIds() {
    return appIds;
  }


  public void setAppIds(List<String> appIds) {
    this.appIds = appIds;
  }


  public FilePlayableListV30Filtering appMaterialIds(List<Long> appMaterialIds) {
    
    this.appMaterialIds = appMaterialIds;
    return this;
  }

  public FilePlayableListV30Filtering addAppMaterialIdsItem(Long appMaterialIdsItem) {
    if (this.appMaterialIds == null) {
      this.appMaterialIds = new ArrayList<>();
    }
    this.appMaterialIds.add(appMaterialIdsItem);
    return this;
  }

   /**
   * 可选过滤参数，试玩/直玩包的app_material_id列表
   * @return appMaterialIds
  **/
  @javax.annotation.Nullable
  public List<Long> getAppMaterialIds() {
    return appMaterialIds;
  }


  public void setAppMaterialIds(List<Long> appMaterialIds) {
    this.appMaterialIds = appMaterialIds;
  }


  public FilePlayableListV30Filtering auditStatus(FilePlayableListV30FilteringAuditStatus auditStatus) {
    
    this.auditStatus = auditStatus;
    return this;
  }

   /**
   * Get auditStatus
   * @return auditStatus
  **/
  @javax.annotation.Nullable
  public FilePlayableListV30FilteringAuditStatus getAuditStatus() {
    return auditStatus;
  }


  public void setAuditStatus(FilePlayableListV30FilteringAuditStatus auditStatus) {
    this.auditStatus = auditStatus;
  }


  public FilePlayableListV30Filtering endTime(String endTime) {
    
    this.endTime = endTime;
    return this;
  }

   /**
   * 创建时间end yyyy-mm-dd hh24:mi:ss
   * @return endTime
  **/
  @javax.annotation.Nullable
  public String getEndTime() {
    return endTime;
  }


  public void setEndTime(String endTime) {
    this.endTime = endTime;
  }


  public FilePlayableListV30Filtering keyword(String keyword) {
    
    this.keyword = keyword;
    return this;
  }

   /**
   * 可选过滤参数，文件名称或ID
   * @return keyword
  **/
  @javax.annotation.Nullable
  public String getKeyword() {
    return keyword;
  }


  public void setKeyword(String keyword) {
    this.keyword = keyword;
  }


  public FilePlayableListV30Filtering materialIds(List<Long> materialIds) {
    
    this.materialIds = materialIds;
    return this;
  }

  public FilePlayableListV30Filtering addMaterialIdsItem(Long materialIdsItem) {
    if (this.materialIds == null) {
      this.materialIds = new ArrayList<>();
    }
    this.materialIds.add(materialIdsItem);
    return this;
  }

   /**
   * 可选过滤参数，待查询的素材ID列表
   * @return materialIds
  **/
  @javax.annotation.Nullable
  public List<Long> getMaterialIds() {
    return materialIds;
  }


  public void setMaterialIds(List<Long> materialIds) {
    this.materialIds = materialIds;
  }


  public FilePlayableListV30Filtering signatures(List<String> signatures) {
    
    this.signatures = signatures;
    return this;
  }

  public FilePlayableListV30Filtering addSignaturesItem(String signaturesItem) {
    if (this.signatures == null) {
      this.signatures = new ArrayList<>();
    }
    this.signatures.add(signaturesItem);
    return this;
  }

   /**
   * 可选过滤参数，素材MD5值列表
   * @return signatures
  **/
  @javax.annotation.Nullable
  public List<String> getSignatures() {
    return signatures;
  }


  public void setSignatures(List<String> signatures) {
    this.signatures = signatures;
  }


  public FilePlayableListV30Filtering startTime(String startTime) {
    
    this.startTime = startTime;
    return this;
  }

   /**
   * 创建时间start yyyy-mm-dd hh24:mi:ss
   * @return startTime
  **/
  @javax.annotation.Nullable
  public String getStartTime() {
    return startTime;
  }


  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }


  public FilePlayableListV30Filtering status(FilePlayableListV30FilteringStatus status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  public FilePlayableListV30FilteringStatus getStatus() {
    return status;
  }


  public void setStatus(FilePlayableListV30FilteringStatus status) {
    this.status = status;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FilePlayableListV30Filtering filePlayableListV30Filtering = (FilePlayableListV30Filtering) o;
    return Objects.equals(this.appIds, filePlayableListV30Filtering.appIds) &&
        Objects.equals(this.appMaterialIds, filePlayableListV30Filtering.appMaterialIds) &&
        Objects.equals(this.auditStatus, filePlayableListV30Filtering.auditStatus) &&
        Objects.equals(this.endTime, filePlayableListV30Filtering.endTime) &&
        Objects.equals(this.keyword, filePlayableListV30Filtering.keyword) &&
        Objects.equals(this.materialIds, filePlayableListV30Filtering.materialIds) &&
        Objects.equals(this.signatures, filePlayableListV30Filtering.signatures) &&
        Objects.equals(this.startTime, filePlayableListV30Filtering.startTime) &&
        Objects.equals(this.status, filePlayableListV30Filtering.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appIds, appMaterialIds, auditStatus, endTime, keyword, materialIds, signatures, startTime, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FilePlayableListV30Filtering {\n");
    sb.append("    appIds: ").append(toIndentedString(appIds)).append("\n");
    sb.append("    appMaterialIds: ").append(toIndentedString(appMaterialIds)).append("\n");
    sb.append("    auditStatus: ").append(toIndentedString(auditStatus)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    keyword: ").append(toIndentedString(keyword)).append("\n");
    sb.append("    materialIds: ").append(toIndentedString(materialIds)).append("\n");
    sb.append("    signatures: ").append(toIndentedString(signatures)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("app_ids");
    openapiFields.add("app_material_ids");
    openapiFields.add("audit_status");
    openapiFields.add("end_time");
    openapiFields.add("keyword");
    openapiFields.add("material_ids");
    openapiFields.add("signatures");
    openapiFields.add("start_time");
    openapiFields.add("status");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }


  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FilePlayableListV30Filtering.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FilePlayableListV30Filtering' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FilePlayableListV30Filtering> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FilePlayableListV30Filtering.class));

       return (TypeAdapter<T>) new TypeAdapter<FilePlayableListV30Filtering>() {
           @Override
           public void write(JsonWriter out, FilePlayableListV30Filtering value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FilePlayableListV30Filtering read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of FilePlayableListV30Filtering given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of FilePlayableListV30Filtering
  * @throws IOException if the JSON string is invalid with respect to FilePlayableListV30Filtering
  */
  public static FilePlayableListV30Filtering fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FilePlayableListV30Filtering.class);
  }

 /**
  * Convert an instance of FilePlayableListV30Filtering to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

