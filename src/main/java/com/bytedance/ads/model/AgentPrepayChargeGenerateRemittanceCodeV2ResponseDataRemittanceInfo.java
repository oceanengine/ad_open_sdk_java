/*
 * Oceanengine Open Api
 * 巨量引擎开放平台 Open Api
 *
 * The version of the OpenAPI document: 1.1.67
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bytedance.ads.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.bytedance.ads.JSON;

/**
 * 汇款码信息
 */
@javax.annotation.Generated(value = "com.org.bytedance.ad_open_sdk.JavacusGenerator", date = "2025-08-08T18:34:27.167266301+08:00[Asia/Shanghai]")
public class AgentPrepayChargeGenerateRemittanceCodeV2ResponseDataRemittanceInfo {
  public static final String SERIALIZED_NAME_BANK_ACCOUNT = "bank_account";
  @SerializedName(SERIALIZED_NAME_BANK_ACCOUNT)
  private String bankAccount = null;

  public static final String SERIALIZED_NAME_BANK_NAME = "bank_name";
  @SerializedName(SERIALIZED_NAME_BANK_NAME)
  private String bankName = null;

  public static final String SERIALIZED_NAME_BANK_NUMBER = "bank_number";
  @SerializedName(SERIALIZED_NAME_BANK_NUMBER)
  private String bankNumber = null;

  public static final String SERIALIZED_NAME_PAYER_NAME = "payer_name";
  @SerializedName(SERIALIZED_NAME_PAYER_NAME)
  private String payerName = null;

  public static final String SERIALIZED_NAME_RECEIVER_AME = "receiver_ame";
  @SerializedName(SERIALIZED_NAME_RECEIVER_AME)
  private String receiverAme = null;

  public static final String SERIALIZED_NAME_REMITTANCE_CODE = "remittance_code";
  @SerializedName(SERIALIZED_NAME_REMITTANCE_CODE)
  private String remittanceCode = null;

  public AgentPrepayChargeGenerateRemittanceCodeV2ResponseDataRemittanceInfo() {
  }

  public AgentPrepayChargeGenerateRemittanceCodeV2ResponseDataRemittanceInfo bankAccount(String bankAccount) {
    
    this.bankAccount = bankAccount;
    return this;
  }

   /**
   * 收款银行账号
   * @return bankAccount
  **/
  @javax.annotation.Nullable
  public String getBankAccount() {
    return bankAccount;
  }


  public void setBankAccount(String bankAccount) {
    this.bankAccount = bankAccount;
  }


  public AgentPrepayChargeGenerateRemittanceCodeV2ResponseDataRemittanceInfo bankName(String bankName) {
    
    this.bankName = bankName;
    return this;
  }

   /**
   * 收款银行名称
   * @return bankName
  **/
  @javax.annotation.Nullable
  public String getBankName() {
    return bankName;
  }


  public void setBankName(String bankName) {
    this.bankName = bankName;
  }


  public AgentPrepayChargeGenerateRemittanceCodeV2ResponseDataRemittanceInfo bankNumber(String bankNumber) {
    
    this.bankNumber = bankNumber;
    return this;
  }

   /**
   * 行联号
   * @return bankNumber
  **/
  @javax.annotation.Nullable
  public String getBankNumber() {
    return bankNumber;
  }


  public void setBankNumber(String bankNumber) {
    this.bankNumber = bankNumber;
  }


  public AgentPrepayChargeGenerateRemittanceCodeV2ResponseDataRemittanceInfo payerName(String payerName) {
    
    this.payerName = payerName;
    return this;
  }

   /**
   * 付款方名称
   * @return payerName
  **/
  @javax.annotation.Nullable
  public String getPayerName() {
    return payerName;
  }


  public void setPayerName(String payerName) {
    this.payerName = payerName;
  }


  public AgentPrepayChargeGenerateRemittanceCodeV2ResponseDataRemittanceInfo receiverAme(String receiverAme) {
    
    this.receiverAme = receiverAme;
    return this;
  }

   /**
   * 收款方名称
   * @return receiverAme
  **/
  @javax.annotation.Nullable
  public String getReceiverAme() {
    return receiverAme;
  }


  public void setReceiverAme(String receiverAme) {
    this.receiverAme = receiverAme;
  }


  public AgentPrepayChargeGenerateRemittanceCodeV2ResponseDataRemittanceInfo remittanceCode(String remittanceCode) {
    
    this.remittanceCode = remittanceCode;
    return this;
  }

   /**
   * 汇款码
   * @return remittanceCode
  **/
  @javax.annotation.Nullable
  public String getRemittanceCode() {
    return remittanceCode;
  }


  public void setRemittanceCode(String remittanceCode) {
    this.remittanceCode = remittanceCode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AgentPrepayChargeGenerateRemittanceCodeV2ResponseDataRemittanceInfo agentPrepayChargeGenerateRemittanceCodeV2ResponseDataRemittanceInfo = (AgentPrepayChargeGenerateRemittanceCodeV2ResponseDataRemittanceInfo) o;
    return Objects.equals(this.bankAccount, agentPrepayChargeGenerateRemittanceCodeV2ResponseDataRemittanceInfo.bankAccount) &&
        Objects.equals(this.bankName, agentPrepayChargeGenerateRemittanceCodeV2ResponseDataRemittanceInfo.bankName) &&
        Objects.equals(this.bankNumber, agentPrepayChargeGenerateRemittanceCodeV2ResponseDataRemittanceInfo.bankNumber) &&
        Objects.equals(this.payerName, agentPrepayChargeGenerateRemittanceCodeV2ResponseDataRemittanceInfo.payerName) &&
        Objects.equals(this.receiverAme, agentPrepayChargeGenerateRemittanceCodeV2ResponseDataRemittanceInfo.receiverAme) &&
        Objects.equals(this.remittanceCode, agentPrepayChargeGenerateRemittanceCodeV2ResponseDataRemittanceInfo.remittanceCode);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(bankAccount, bankName, bankNumber, payerName, receiverAme, remittanceCode);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AgentPrepayChargeGenerateRemittanceCodeV2ResponseDataRemittanceInfo {\n");
    sb.append("    bankAccount: ").append(toIndentedString(bankAccount)).append("\n");
    sb.append("    bankName: ").append(toIndentedString(bankName)).append("\n");
    sb.append("    bankNumber: ").append(toIndentedString(bankNumber)).append("\n");
    sb.append("    payerName: ").append(toIndentedString(payerName)).append("\n");
    sb.append("    receiverAme: ").append(toIndentedString(receiverAme)).append("\n");
    sb.append("    remittanceCode: ").append(toIndentedString(remittanceCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bank_account");
    openapiFields.add("bank_name");
    openapiFields.add("bank_number");
    openapiFields.add("payer_name");
    openapiFields.add("receiver_ame");
    openapiFields.add("remittance_code");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }


  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AgentPrepayChargeGenerateRemittanceCodeV2ResponseDataRemittanceInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AgentPrepayChargeGenerateRemittanceCodeV2ResponseDataRemittanceInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AgentPrepayChargeGenerateRemittanceCodeV2ResponseDataRemittanceInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AgentPrepayChargeGenerateRemittanceCodeV2ResponseDataRemittanceInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<AgentPrepayChargeGenerateRemittanceCodeV2ResponseDataRemittanceInfo>() {
           @Override
           public void write(JsonWriter out, AgentPrepayChargeGenerateRemittanceCodeV2ResponseDataRemittanceInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AgentPrepayChargeGenerateRemittanceCodeV2ResponseDataRemittanceInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AgentPrepayChargeGenerateRemittanceCodeV2ResponseDataRemittanceInfo given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AgentPrepayChargeGenerateRemittanceCodeV2ResponseDataRemittanceInfo
  * @throws IOException if the JSON string is invalid with respect to AgentPrepayChargeGenerateRemittanceCodeV2ResponseDataRemittanceInfo
  */
  public static AgentPrepayChargeGenerateRemittanceCodeV2ResponseDataRemittanceInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AgentPrepayChargeGenerateRemittanceCodeV2ResponseDataRemittanceInfo.class);
  }

 /**
  * Convert an instance of AgentPrepayChargeGenerateRemittanceCodeV2ResponseDataRemittanceInfo to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

