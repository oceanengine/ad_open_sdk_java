/*
 * Oceanengine Open Api
 * 巨量引擎开放平台 Open Api
 *
 * The version of the OpenAPI document: 1.1.55
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bytedance.ads.model;

import java.util.Objects;
import java.util.Arrays;
import com.bytedance.ads.model.DcdChargeSubmitV30Platform;
import com.bytedance.ads.model.DcdChargeSubmitV30RequestPayInfo;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.bytedance.ads.JSON;

/**
 * DcdChargeSubmitV30Request
 */
@javax.annotation.Generated(value = "com.org.bytedance.ad_open_sdk.JavacusGenerator", date = "2025-06-04T10:31:21.318619561+08:00[Asia/Shanghai]")
public class DcdChargeSubmitV30Request {
  public static final String SERIALIZED_NAME_ADVERTISER_ID = "advertiser_id";
  @SerializedName(SERIALIZED_NAME_ADVERTISER_ID)
  private Long advertiserId = null;

  public static final String SERIALIZED_NAME_CHARGE_AMOUNT = "charge_amount";
  @SerializedName(SERIALIZED_NAME_CHARGE_AMOUNT)
  private Long chargeAmount = null;

  public static final String SERIALIZED_NAME_CHARGE_REQUEST_ID = "charge_request_id";
  @SerializedName(SERIALIZED_NAME_CHARGE_REQUEST_ID)
  private String chargeRequestId = null;

  public static final String SERIALIZED_NAME_PAY_INFO = "pay_info";
  @SerializedName(SERIALIZED_NAME_PAY_INFO)
  private DcdChargeSubmitV30RequestPayInfo payInfo = null;

  public static final String SERIALIZED_NAME_PLATFORM = "platform";
  @SerializedName(SERIALIZED_NAME_PLATFORM)
  private DcdChargeSubmitV30Platform platform = null;

  public DcdChargeSubmitV30Request() {
  }

  public DcdChargeSubmitV30Request advertiserId(Long advertiserId) {
    
    this.advertiserId = advertiserId;
    return this;
  }

   /**
   * 广告主ID
   * @return advertiserId
  **/
  @javax.annotation.Nonnull
  public Long getAdvertiserId() {
    return advertiserId;
  }


  public void setAdvertiserId(Long advertiserId) {
    this.advertiserId = advertiserId;
  }


  public DcdChargeSubmitV30Request chargeAmount(Long chargeAmount) {
    
    this.chargeAmount = chargeAmount;
    return this;
  }

   /**
   * 充值金额，单位为分（即实际金额*100）
   * minimum: 1
   * maximum: 1000000000
   * @return chargeAmount
  **/
  @javax.annotation.Nonnull
  public Long getChargeAmount() {
    return chargeAmount;
  }


  public void setChargeAmount(Long chargeAmount) {
    this.chargeAmount = chargeAmount;
  }


  public DcdChargeSubmitV30Request chargeRequestId(String chargeRequestId) {
    
    this.chargeRequestId = chargeRequestId;
    return this;
  }

   /**
   * 充值请求唯一编号
   * @return chargeRequestId
  **/
  @javax.annotation.Nonnull
  public String getChargeRequestId() {
    return chargeRequestId;
  }


  public void setChargeRequestId(String chargeRequestId) {
    this.chargeRequestId = chargeRequestId;
  }


  public DcdChargeSubmitV30Request payInfo(DcdChargeSubmitV30RequestPayInfo payInfo) {
    
    this.payInfo = payInfo;
    return this;
  }

   /**
   * Get payInfo
   * @return payInfo
  **/
  @javax.annotation.Nonnull
  public DcdChargeSubmitV30RequestPayInfo getPayInfo() {
    return payInfo;
  }


  public void setPayInfo(DcdChargeSubmitV30RequestPayInfo payInfo) {
    this.payInfo = payInfo;
  }


  public DcdChargeSubmitV30Request platform(DcdChargeSubmitV30Platform platform) {
    
    this.platform = platform;
    return this;
  }

   /**
   * Get platform
   * @return platform
  **/
  @javax.annotation.Nonnull
  public DcdChargeSubmitV30Platform getPlatform() {
    return platform;
  }


  public void setPlatform(DcdChargeSubmitV30Platform platform) {
    this.platform = platform;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DcdChargeSubmitV30Request dcdChargeSubmitV30Request = (DcdChargeSubmitV30Request) o;
    return Objects.equals(this.advertiserId, dcdChargeSubmitV30Request.advertiserId) &&
        Objects.equals(this.chargeAmount, dcdChargeSubmitV30Request.chargeAmount) &&
        Objects.equals(this.chargeRequestId, dcdChargeSubmitV30Request.chargeRequestId) &&
        Objects.equals(this.payInfo, dcdChargeSubmitV30Request.payInfo) &&
        Objects.equals(this.platform, dcdChargeSubmitV30Request.platform);
  }

  @Override
  public int hashCode() {
    return Objects.hash(advertiserId, chargeAmount, chargeRequestId, payInfo, platform);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DcdChargeSubmitV30Request {\n");
    sb.append("    advertiserId: ").append(toIndentedString(advertiserId)).append("\n");
    sb.append("    chargeAmount: ").append(toIndentedString(chargeAmount)).append("\n");
    sb.append("    chargeRequestId: ").append(toIndentedString(chargeRequestId)).append("\n");
    sb.append("    payInfo: ").append(toIndentedString(payInfo)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("advertiser_id");
    openapiFields.add("charge_amount");
    openapiFields.add("charge_request_id");
    openapiFields.add("pay_info");
    openapiFields.add("platform");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("advertiser_id");
    openapiRequiredFields.add("charge_amount");
    openapiRequiredFields.add("charge_request_id");
    openapiRequiredFields.add("pay_info");
    openapiRequiredFields.add("platform");
  }


  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DcdChargeSubmitV30Request.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DcdChargeSubmitV30Request' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DcdChargeSubmitV30Request> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DcdChargeSubmitV30Request.class));

       return (TypeAdapter<T>) new TypeAdapter<DcdChargeSubmitV30Request>() {
           @Override
           public void write(JsonWriter out, DcdChargeSubmitV30Request value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DcdChargeSubmitV30Request read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of DcdChargeSubmitV30Request given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of DcdChargeSubmitV30Request
  * @throws IOException if the JSON string is invalid with respect to DcdChargeSubmitV30Request
  */
  public static DcdChargeSubmitV30Request fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DcdChargeSubmitV30Request.class);
  }

 /**
  * Convert an instance of DcdChargeSubmitV30Request to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

