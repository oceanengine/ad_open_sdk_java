/*
 * Oceanengine Open Api
 * 巨量引擎开放平台 Open Api
 *
 * The version of the OpenAPI document: 1.1.63
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bytedance.ads.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.bytedance.ads.JSON;

/**
 * EventManagerAuthAddPublicKeyV2Request
 */
@javax.annotation.Generated(value = "com.org.bytedance.ad_open_sdk.JavacusGenerator", date = "2025-07-25T11:24:24.613189650+08:00[Asia/Shanghai]")
public class EventManagerAuthAddPublicKeyV2Request {
  public static final String SERIALIZED_NAME_ADVERTISER_ID = "advertiser_id";
  @SerializedName(SERIALIZED_NAME_ADVERTISER_ID)
  private Long advertiserId = null;

  public static final String SERIALIZED_NAME_CREDENTIAL = "credential";
  @SerializedName(SERIALIZED_NAME_CREDENTIAL)
  private String credential = null;

  public static final String SERIALIZED_NAME_PUBKEY = "pubkey";
  @SerializedName(SERIALIZED_NAME_PUBKEY)
  private String pubkey = null;

  public static final String SERIALIZED_NAME_SIGNATURE = "signature";
  @SerializedName(SERIALIZED_NAME_SIGNATURE)
  private String signature = null;

  public EventManagerAuthAddPublicKeyV2Request() {
  }

  public EventManagerAuthAddPublicKeyV2Request advertiserId(Long advertiserId) {
    
    this.advertiserId = advertiserId;
    return this;
  }

   /**
   * 
   * @return advertiserId
  **/
  @javax.annotation.Nonnull
  public Long getAdvertiserId() {
    return advertiserId;
  }


  public void setAdvertiserId(Long advertiserId) {
    this.advertiserId = advertiserId;
  }


  public EventManagerAuthAddPublicKeyV2Request credential(String credential) {
    
    this.credential = credential;
    return this;
  }

   /**
   * 
   * @return credential
  **/
  @javax.annotation.Nonnull
  public String getCredential() {
    return credential;
  }


  public void setCredential(String credential) {
    this.credential = credential;
  }


  public EventManagerAuthAddPublicKeyV2Request pubkey(String pubkey) {
    
    this.pubkey = pubkey;
    return this;
  }

   /**
   * 
   * @return pubkey
  **/
  @javax.annotation.Nonnull
  public String getPubkey() {
    return pubkey;
  }


  public void setPubkey(String pubkey) {
    this.pubkey = pubkey;
  }


  public EventManagerAuthAddPublicKeyV2Request signature(String signature) {
    
    this.signature = signature;
    return this;
  }

   /**
   * 
   * @return signature
  **/
  @javax.annotation.Nonnull
  public String getSignature() {
    return signature;
  }


  public void setSignature(String signature) {
    this.signature = signature;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EventManagerAuthAddPublicKeyV2Request eventManagerAuthAddPublicKeyV2Request = (EventManagerAuthAddPublicKeyV2Request) o;
    return Objects.equals(this.advertiserId, eventManagerAuthAddPublicKeyV2Request.advertiserId) &&
        Objects.equals(this.credential, eventManagerAuthAddPublicKeyV2Request.credential) &&
        Objects.equals(this.pubkey, eventManagerAuthAddPublicKeyV2Request.pubkey) &&
        Objects.equals(this.signature, eventManagerAuthAddPublicKeyV2Request.signature);
  }

  @Override
  public int hashCode() {
    return Objects.hash(advertiserId, credential, pubkey, signature);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EventManagerAuthAddPublicKeyV2Request {\n");
    sb.append("    advertiserId: ").append(toIndentedString(advertiserId)).append("\n");
    sb.append("    credential: ").append(toIndentedString(credential)).append("\n");
    sb.append("    pubkey: ").append(toIndentedString(pubkey)).append("\n");
    sb.append("    signature: ").append(toIndentedString(signature)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("advertiser_id");
    openapiFields.add("credential");
    openapiFields.add("pubkey");
    openapiFields.add("signature");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("advertiser_id");
    openapiRequiredFields.add("credential");
    openapiRequiredFields.add("pubkey");
    openapiRequiredFields.add("signature");
  }


  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EventManagerAuthAddPublicKeyV2Request.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EventManagerAuthAddPublicKeyV2Request' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EventManagerAuthAddPublicKeyV2Request> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EventManagerAuthAddPublicKeyV2Request.class));

       return (TypeAdapter<T>) new TypeAdapter<EventManagerAuthAddPublicKeyV2Request>() {
           @Override
           public void write(JsonWriter out, EventManagerAuthAddPublicKeyV2Request value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EventManagerAuthAddPublicKeyV2Request read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EventManagerAuthAddPublicKeyV2Request given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EventManagerAuthAddPublicKeyV2Request
  * @throws IOException if the JSON string is invalid with respect to EventManagerAuthAddPublicKeyV2Request
  */
  public static EventManagerAuthAddPublicKeyV2Request fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EventManagerAuthAddPublicKeyV2Request.class);
  }

 /**
  * Convert an instance of EventManagerAuthAddPublicKeyV2Request to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

