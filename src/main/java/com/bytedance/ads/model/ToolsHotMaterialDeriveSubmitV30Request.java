/*
 * Oceanengine Open Api
 * 巨量引擎开放平台 Open Api
 *
 * The version of the OpenAPI document: 1.1.71
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bytedance.ads.model;

import java.util.Objects;
import java.util.Arrays;
import com.bytedance.ads.model.ToolsHotMaterialDeriveSubmitV30ExcludeStrategies;
import com.bytedance.ads.model.ToolsHotMaterialDeriveSubmitV30Strategies;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.bytedance.ads.JSON;

/**
 * ToolsHotMaterialDeriveSubmitV30Request
 */
@javax.annotation.Generated(value = "com.org.bytedance.ad_open_sdk.JavacusGenerator", date = "2025-09-26T11:43:14.561505336+08:00[Asia/Shanghai]")
public class ToolsHotMaterialDeriveSubmitV30Request {
  public static final String SERIALIZED_NAME_ADVERTISER_ID = "advertiser_id";
  @SerializedName(SERIALIZED_NAME_ADVERTISER_ID)
  private Long advertiserId = null;

  public static final String SERIALIZED_NAME_ELEMENT_IDS = "element_ids";
  @SerializedName(SERIALIZED_NAME_ELEMENT_IDS)
  private List<Long> elementIds = null;

  public static final String SERIALIZED_NAME_EXCLUDE_STRATEGIES = "exclude_strategies";
  @SerializedName(SERIALIZED_NAME_EXCLUDE_STRATEGIES)
  private List<ToolsHotMaterialDeriveSubmitV30ExcludeStrategies> excludeStrategies = null;

  public static final String SERIALIZED_NAME_MATERIAL_IDS = "material_ids";
  @SerializedName(SERIALIZED_NAME_MATERIAL_IDS)
  private List<Long> materialIds = null;

  public static final String SERIALIZED_NAME_STICKER_ELEMENT_IDS = "sticker_element_ids";
  @SerializedName(SERIALIZED_NAME_STICKER_ELEMENT_IDS)
  private List<Long> stickerElementIds = null;

  public static final String SERIALIZED_NAME_STRATEGIES = "strategies";
  @SerializedName(SERIALIZED_NAME_STRATEGIES)
  private List<ToolsHotMaterialDeriveSubmitV30Strategies> strategies = null;

  public ToolsHotMaterialDeriveSubmitV30Request() {
  }

  public ToolsHotMaterialDeriveSubmitV30Request advertiserId(Long advertiserId) {
    
    this.advertiserId = advertiserId;
    return this;
  }

   /**
   * 
   * @return advertiserId
  **/
  @javax.annotation.Nonnull
  public Long getAdvertiserId() {
    return advertiserId;
  }


  public void setAdvertiserId(Long advertiserId) {
    this.advertiserId = advertiserId;
  }


  public ToolsHotMaterialDeriveSubmitV30Request elementIds(List<Long> elementIds) {
    
    this.elementIds = elementIds;
    return this;
  }

  public ToolsHotMaterialDeriveSubmitV30Request addElementIdsItem(Long elementIdsItem) {
    if (this.elementIds == null) {
      this.elementIds = new ArrayList<>();
    }
    this.elementIds.add(elementIdsItem);
    return this;
  }

   /**
   * 
   * @return elementIds
  **/
  @javax.annotation.Nullable
  public List<Long> getElementIds() {
    return elementIds;
  }


  public void setElementIds(List<Long> elementIds) {
    this.elementIds = elementIds;
  }


  public ToolsHotMaterialDeriveSubmitV30Request excludeStrategies(List<ToolsHotMaterialDeriveSubmitV30ExcludeStrategies> excludeStrategies) {
    
    this.excludeStrategies = excludeStrategies;
    return this;
  }

  public ToolsHotMaterialDeriveSubmitV30Request addExcludeStrategiesItem(ToolsHotMaterialDeriveSubmitV30ExcludeStrategies excludeStrategiesItem) {
    if (this.excludeStrategies == null) {
      this.excludeStrategies = new ArrayList<>();
    }
    this.excludeStrategies.add(excludeStrategiesItem);
    return this;
  }

   /**
   * 
   * @return excludeStrategies
  **/
  @javax.annotation.Nullable
  public List<ToolsHotMaterialDeriveSubmitV30ExcludeStrategies> getExcludeStrategies() {
    return excludeStrategies;
  }


  public void setExcludeStrategies(List<ToolsHotMaterialDeriveSubmitV30ExcludeStrategies> excludeStrategies) {
    this.excludeStrategies = excludeStrategies;
  }


  public ToolsHotMaterialDeriveSubmitV30Request materialIds(List<Long> materialIds) {
    
    this.materialIds = materialIds;
    return this;
  }

  public ToolsHotMaterialDeriveSubmitV30Request addMaterialIdsItem(Long materialIdsItem) {
    if (this.materialIds == null) {
      this.materialIds = new ArrayList<>();
    }
    this.materialIds.add(materialIdsItem);
    return this;
  }

   /**
   * 
   * @return materialIds
  **/
  @javax.annotation.Nonnull
  public List<Long> getMaterialIds() {
    return materialIds;
  }


  public void setMaterialIds(List<Long> materialIds) {
    this.materialIds = materialIds;
  }


  public ToolsHotMaterialDeriveSubmitV30Request stickerElementIds(List<Long> stickerElementIds) {
    
    this.stickerElementIds = stickerElementIds;
    return this;
  }

  public ToolsHotMaterialDeriveSubmitV30Request addStickerElementIdsItem(Long stickerElementIdsItem) {
    if (this.stickerElementIds == null) {
      this.stickerElementIds = new ArrayList<>();
    }
    this.stickerElementIds.add(stickerElementIdsItem);
    return this;
  }

   /**
   * 
   * @return stickerElementIds
  **/
  @javax.annotation.Nullable
  public List<Long> getStickerElementIds() {
    return stickerElementIds;
  }


  public void setStickerElementIds(List<Long> stickerElementIds) {
    this.stickerElementIds = stickerElementIds;
  }


  public ToolsHotMaterialDeriveSubmitV30Request strategies(List<ToolsHotMaterialDeriveSubmitV30Strategies> strategies) {
    
    this.strategies = strategies;
    return this;
  }

  public ToolsHotMaterialDeriveSubmitV30Request addStrategiesItem(ToolsHotMaterialDeriveSubmitV30Strategies strategiesItem) {
    if (this.strategies == null) {
      this.strategies = new ArrayList<>();
    }
    this.strategies.add(strategiesItem);
    return this;
  }

   /**
   * 
   * @return strategies
  **/
  @javax.annotation.Nullable
  public List<ToolsHotMaterialDeriveSubmitV30Strategies> getStrategies() {
    return strategies;
  }


  public void setStrategies(List<ToolsHotMaterialDeriveSubmitV30Strategies> strategies) {
    this.strategies = strategies;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ToolsHotMaterialDeriveSubmitV30Request toolsHotMaterialDeriveSubmitV30Request = (ToolsHotMaterialDeriveSubmitV30Request) o;
    return Objects.equals(this.advertiserId, toolsHotMaterialDeriveSubmitV30Request.advertiserId) &&
        Objects.equals(this.elementIds, toolsHotMaterialDeriveSubmitV30Request.elementIds) &&
        Objects.equals(this.excludeStrategies, toolsHotMaterialDeriveSubmitV30Request.excludeStrategies) &&
        Objects.equals(this.materialIds, toolsHotMaterialDeriveSubmitV30Request.materialIds) &&
        Objects.equals(this.stickerElementIds, toolsHotMaterialDeriveSubmitV30Request.stickerElementIds) &&
        Objects.equals(this.strategies, toolsHotMaterialDeriveSubmitV30Request.strategies);
  }

  @Override
  public int hashCode() {
    return Objects.hash(advertiserId, elementIds, excludeStrategies, materialIds, stickerElementIds, strategies);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ToolsHotMaterialDeriveSubmitV30Request {\n");
    sb.append("    advertiserId: ").append(toIndentedString(advertiserId)).append("\n");
    sb.append("    elementIds: ").append(toIndentedString(elementIds)).append("\n");
    sb.append("    excludeStrategies: ").append(toIndentedString(excludeStrategies)).append("\n");
    sb.append("    materialIds: ").append(toIndentedString(materialIds)).append("\n");
    sb.append("    stickerElementIds: ").append(toIndentedString(stickerElementIds)).append("\n");
    sb.append("    strategies: ").append(toIndentedString(strategies)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("advertiser_id");
    openapiFields.add("element_ids");
    openapiFields.add("exclude_strategies");
    openapiFields.add("material_ids");
    openapiFields.add("sticker_element_ids");
    openapiFields.add("strategies");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("advertiser_id");
    openapiRequiredFields.add("material_ids");
  }


  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ToolsHotMaterialDeriveSubmitV30Request.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ToolsHotMaterialDeriveSubmitV30Request' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ToolsHotMaterialDeriveSubmitV30Request> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ToolsHotMaterialDeriveSubmitV30Request.class));

       return (TypeAdapter<T>) new TypeAdapter<ToolsHotMaterialDeriveSubmitV30Request>() {
           @Override
           public void write(JsonWriter out, ToolsHotMaterialDeriveSubmitV30Request value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ToolsHotMaterialDeriveSubmitV30Request read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ToolsHotMaterialDeriveSubmitV30Request given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ToolsHotMaterialDeriveSubmitV30Request
  * @throws IOException if the JSON string is invalid with respect to ToolsHotMaterialDeriveSubmitV30Request
  */
  public static ToolsHotMaterialDeriveSubmitV30Request fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ToolsHotMaterialDeriveSubmitV30Request.class);
  }

 /**
  * Convert an instance of ToolsHotMaterialDeriveSubmitV30Request to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

