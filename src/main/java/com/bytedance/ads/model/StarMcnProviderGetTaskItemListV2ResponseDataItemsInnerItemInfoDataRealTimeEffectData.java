/*
 * Oceanengine Open Api
 * 巨量引擎开放平台 Open Api
 *
 * The version of the OpenAPI document: 1.1.61
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bytedance.ads.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.bytedance.ads.JSON;

/**
 * 实时效果数据
 */
@javax.annotation.Generated(value = "com.org.bytedance.ad_open_sdk.JavacusGenerator", date = "2025-07-08T15:34:47.140915476+08:00[Asia/Shanghai]")
public class StarMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData {
  public static final String SERIALIZED_NAME_AVG_WATCH_DURA = "avg_watch_dura";
  @SerializedName(SERIALIZED_NAME_AVG_WATCH_DURA)
  private Long avgWatchDura = null;

  public static final String SERIALIZED_NAME_COMMENT_CNT = "comment_cnt";
  @SerializedName(SERIALIZED_NAME_COMMENT_CNT)
  private Long commentCnt = null;

  public static final String SERIALIZED_NAME_FAVORITE_CNT = "favorite_cnt";
  @SerializedName(SERIALIZED_NAME_FAVORITE_CNT)
  private Long favoriteCnt = null;

  public static final String SERIALIZED_NAME_FINISH_RATE = "finish_rate";
  @SerializedName(SERIALIZED_NAME_FINISH_RATE)
  private Double finishRate = null;

  public static final String SERIALIZED_NAME_INTERACT_CNT = "interact_cnt";
  @SerializedName(SERIALIZED_NAME_INTERACT_CNT)
  private Long interactCnt = null;

  public static final String SERIALIZED_NAME_INTERACT_RATE = "interact_rate";
  @SerializedName(SERIALIZED_NAME_INTERACT_RATE)
  private Double interactRate = null;

  public static final String SERIALIZED_NAME_LIKE_CNT = "like_cnt";
  @SerializedName(SERIALIZED_NAME_LIKE_CNT)
  private Long likeCnt = null;

  public static final String SERIALIZED_NAME_PLAY_FINISH_RATE = "play_finish_rate";
  @SerializedName(SERIALIZED_NAME_PLAY_FINISH_RATE)
  private Long playFinishRate = null;

  public static final String SERIALIZED_NAME_PLAY_RATE3S = "play_rate3s";
  @SerializedName(SERIALIZED_NAME_PLAY_RATE3S)
  private Long playRate3s = null;

  public static final String SERIALIZED_NAME_PLAY_RATE5S = "play_rate5s";
  @SerializedName(SERIALIZED_NAME_PLAY_RATE5S)
  private Long playRate5s = null;

  public static final String SERIALIZED_NAME_SHARE_CNT = "share_cnt";
  @SerializedName(SERIALIZED_NAME_SHARE_CNT)
  private Long shareCnt = null;

  public static final String SERIALIZED_NAME_WATCH_CNT = "watch_cnt";
  @SerializedName(SERIALIZED_NAME_WATCH_CNT)
  private Long watchCnt = null;

  public StarMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData() {
  }

  public StarMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData avgWatchDura(Long avgWatchDura) {
    
    this.avgWatchDura = avgWatchDura;
    return this;
  }

   /**
   * 人均观看时长
   * @return avgWatchDura
  **/
  @javax.annotation.Nullable
  public Long getAvgWatchDura() {
    return avgWatchDura;
  }


  public void setAvgWatchDura(Long avgWatchDura) {
    this.avgWatchDura = avgWatchDura;
  }


  public StarMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData commentCnt(Long commentCnt) {
    
    this.commentCnt = commentCnt;
    return this;
  }

   /**
   * 评论数（端上实时）
   * @return commentCnt
  **/
  @javax.annotation.Nullable
  public Long getCommentCnt() {
    return commentCnt;
  }


  public void setCommentCnt(Long commentCnt) {
    this.commentCnt = commentCnt;
  }


  public StarMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData favoriteCnt(Long favoriteCnt) {
    
    this.favoriteCnt = favoriteCnt;
    return this;
  }

   /**
   * 收藏数（端上实时）
   * @return favoriteCnt
  **/
  @javax.annotation.Nullable
  public Long getFavoriteCnt() {
    return favoriteCnt;
  }


  public void setFavoriteCnt(Long favoriteCnt) {
    this.favoriteCnt = favoriteCnt;
  }


  public StarMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData finishRate(Double finishRate) {
    
    this.finishRate = finishRate;
    return this;
  }

   /**
   * 完播率
   * @return finishRate
  **/
  @javax.annotation.Nullable
  public Double getFinishRate() {
    return finishRate;
  }


  public void setFinishRate(Double finishRate) {
    this.finishRate = finishRate;
  }


  public StarMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData interactCnt(Long interactCnt) {
    
    this.interactCnt = interactCnt;
    return this;
  }

   /**
   * 互动量（端上实时）
   * @return interactCnt
  **/
  @javax.annotation.Nullable
  public Long getInteractCnt() {
    return interactCnt;
  }


  public void setInteractCnt(Long interactCnt) {
    this.interactCnt = interactCnt;
  }


  public StarMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData interactRate(Double interactRate) {
    
    this.interactRate = interactRate;
    return this;
  }

   /**
   * 互动率（点赞+评论+转发）/播放(rate * 100)（端上实时）
   * @return interactRate
  **/
  @javax.annotation.Nullable
  public Double getInteractRate() {
    return interactRate;
  }


  public void setInteractRate(Double interactRate) {
    this.interactRate = interactRate;
  }


  public StarMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData likeCnt(Long likeCnt) {
    
    this.likeCnt = likeCnt;
    return this;
  }

   /**
   * 点赞数（端上实时）
   * @return likeCnt
  **/
  @javax.annotation.Nullable
  public Long getLikeCnt() {
    return likeCnt;
  }


  public void setLikeCnt(Long likeCnt) {
    this.likeCnt = likeCnt;
  }


  public StarMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData playFinishRate(Long playFinishRate) {
    
    this.playFinishRate = playFinishRate;
    return this;
  }

   /**
   * 完播率（客户端完播量/客户端播放量）（单位：万分比 小数扩大了1W倍）
   * @return playFinishRate
  **/
  @javax.annotation.Nullable
  public Long getPlayFinishRate() {
    return playFinishRate;
  }


  public void setPlayFinishRate(Long playFinishRate) {
    this.playFinishRate = playFinishRate;
  }


  public StarMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData playRate3s(Long playRate3s) {
    
    this.playRate3s = playRate3s;
    return this;
  }

   /**
   * 3S播放率（客户端3S播放量/客户端播放量）（单位：万分比 小数扩大了1W倍）
   * @return playRate3s
  **/
  @javax.annotation.Nullable
  public Long getPlayRate3s() {
    return playRate3s;
  }


  public void setPlayRate3s(Long playRate3s) {
    this.playRate3s = playRate3s;
  }


  public StarMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData playRate5s(Long playRate5s) {
    
    this.playRate5s = playRate5s;
    return this;
  }

   /**
   * 5S播放率 （客户端5S播放量/客户端播放量）（单位：万分比 小数扩大了1W倍）
   * @return playRate5s
  **/
  @javax.annotation.Nullable
  public Long getPlayRate5s() {
    return playRate5s;
  }


  public void setPlayRate5s(Long playRate5s) {
    this.playRate5s = playRate5s;
  }


  public StarMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData shareCnt(Long shareCnt) {
    
    this.shareCnt = shareCnt;
    return this;
  }

   /**
   * 分享数（端上实时）
   * @return shareCnt
  **/
  @javax.annotation.Nullable
  public Long getShareCnt() {
    return shareCnt;
  }


  public void setShareCnt(Long shareCnt) {
    this.shareCnt = shareCnt;
  }


  public StarMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData watchCnt(Long watchCnt) {
    
    this.watchCnt = watchCnt;
    return this;
  }

   /**
   * 播放量（端上实时）
   * @return watchCnt
  **/
  @javax.annotation.Nullable
  public Long getWatchCnt() {
    return watchCnt;
  }


  public void setWatchCnt(Long watchCnt) {
    this.watchCnt = watchCnt;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StarMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData starMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData = (StarMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData) o;
    return Objects.equals(this.avgWatchDura, starMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData.avgWatchDura) &&
        Objects.equals(this.commentCnt, starMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData.commentCnt) &&
        Objects.equals(this.favoriteCnt, starMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData.favoriteCnt) &&
        Objects.equals(this.finishRate, starMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData.finishRate) &&
        Objects.equals(this.interactCnt, starMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData.interactCnt) &&
        Objects.equals(this.interactRate, starMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData.interactRate) &&
        Objects.equals(this.likeCnt, starMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData.likeCnt) &&
        Objects.equals(this.playFinishRate, starMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData.playFinishRate) &&
        Objects.equals(this.playRate3s, starMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData.playRate3s) &&
        Objects.equals(this.playRate5s, starMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData.playRate5s) &&
        Objects.equals(this.shareCnt, starMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData.shareCnt) &&
        Objects.equals(this.watchCnt, starMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData.watchCnt);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(avgWatchDura, commentCnt, favoriteCnt, finishRate, interactCnt, interactRate, likeCnt, playFinishRate, playRate3s, playRate5s, shareCnt, watchCnt);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StarMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData {\n");
    sb.append("    avgWatchDura: ").append(toIndentedString(avgWatchDura)).append("\n");
    sb.append("    commentCnt: ").append(toIndentedString(commentCnt)).append("\n");
    sb.append("    favoriteCnt: ").append(toIndentedString(favoriteCnt)).append("\n");
    sb.append("    finishRate: ").append(toIndentedString(finishRate)).append("\n");
    sb.append("    interactCnt: ").append(toIndentedString(interactCnt)).append("\n");
    sb.append("    interactRate: ").append(toIndentedString(interactRate)).append("\n");
    sb.append("    likeCnt: ").append(toIndentedString(likeCnt)).append("\n");
    sb.append("    playFinishRate: ").append(toIndentedString(playFinishRate)).append("\n");
    sb.append("    playRate3s: ").append(toIndentedString(playRate3s)).append("\n");
    sb.append("    playRate5s: ").append(toIndentedString(playRate5s)).append("\n");
    sb.append("    shareCnt: ").append(toIndentedString(shareCnt)).append("\n");
    sb.append("    watchCnt: ").append(toIndentedString(watchCnt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("avg_watch_dura");
    openapiFields.add("comment_cnt");
    openapiFields.add("favorite_cnt");
    openapiFields.add("finish_rate");
    openapiFields.add("interact_cnt");
    openapiFields.add("interact_rate");
    openapiFields.add("like_cnt");
    openapiFields.add("play_finish_rate");
    openapiFields.add("play_rate3s");
    openapiFields.add("play_rate5s");
    openapiFields.add("share_cnt");
    openapiFields.add("watch_cnt");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }


  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StarMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StarMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StarMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StarMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData.class));

       return (TypeAdapter<T>) new TypeAdapter<StarMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData>() {
           @Override
           public void write(JsonWriter out, StarMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public StarMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of StarMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of StarMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData
  * @throws IOException if the JSON string is invalid with respect to StarMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData
  */
  public static StarMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StarMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData.class);
  }

 /**
  * Convert an instance of StarMcnProviderGetTaskItemListV2ResponseDataItemsInnerItemInfoDataRealTimeEffectData to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

