/*
 * Oceanengine Open Api
 * 巨量引擎开放平台 Open Api
 *
 * The version of the OpenAPI document: 1.1.63
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bytedance.ads.model;

import java.util.Objects;
import java.util.Arrays;
import com.bytedance.ads.model.DcdChargeSubmitV30PayInfoPaymentChannel;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.bytedance.ads.JSON;

/**
 * 收银台信息
 */
@javax.annotation.Generated(value = "com.org.bytedance.ad_open_sdk.JavacusGenerator", date = "2025-07-25T11:24:24.613189650+08:00[Asia/Shanghai]")
public class DcdChargeSubmitV30RequestPayInfo {
  public static final String SERIALIZED_NAME_PAYMENT_CHANNEL = "payment_channel";
  @SerializedName(SERIALIZED_NAME_PAYMENT_CHANNEL)
  private DcdChargeSubmitV30PayInfoPaymentChannel paymentChannel = null;

  public static final String SERIALIZED_NAME_RISK_INFO = "risk_info";
  @SerializedName(SERIALIZED_NAME_RISK_INFO)
  private String riskInfo = null;

  public DcdChargeSubmitV30RequestPayInfo() {
  }

  public DcdChargeSubmitV30RequestPayInfo paymentChannel(DcdChargeSubmitV30PayInfoPaymentChannel paymentChannel) {
    
    this.paymentChannel = paymentChannel;
    return this;
  }

   /**
   * Get paymentChannel
   * @return paymentChannel
  **/
  @javax.annotation.Nullable
  public DcdChargeSubmitV30PayInfoPaymentChannel getPaymentChannel() {
    return paymentChannel;
  }


  public void setPaymentChannel(DcdChargeSubmitV30PayInfoPaymentChannel paymentChannel) {
    this.paymentChannel = paymentChannel;
  }


  public DcdChargeSubmitV30RequestPayInfo riskInfo(String riskInfo) {
    
    this.riskInfo = riskInfo;
    return this;
  }

   /**
   * 风控信息，至少需要包含device_id和ip的json字符串，例子：{\&quot;ip\&quot;: xxx, \&quot;device_id\&quot;: xxx}
   * @return riskInfo
  **/
  @javax.annotation.Nullable
  public String getRiskInfo() {
    return riskInfo;
  }


  public void setRiskInfo(String riskInfo) {
    this.riskInfo = riskInfo;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DcdChargeSubmitV30RequestPayInfo dcdChargeSubmitV30RequestPayInfo = (DcdChargeSubmitV30RequestPayInfo) o;
    return Objects.equals(this.paymentChannel, dcdChargeSubmitV30RequestPayInfo.paymentChannel) &&
        Objects.equals(this.riskInfo, dcdChargeSubmitV30RequestPayInfo.riskInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(paymentChannel, riskInfo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DcdChargeSubmitV30RequestPayInfo {\n");
    sb.append("    paymentChannel: ").append(toIndentedString(paymentChannel)).append("\n");
    sb.append("    riskInfo: ").append(toIndentedString(riskInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("payment_channel");
    openapiFields.add("risk_info");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }


  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DcdChargeSubmitV30RequestPayInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DcdChargeSubmitV30RequestPayInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DcdChargeSubmitV30RequestPayInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DcdChargeSubmitV30RequestPayInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<DcdChargeSubmitV30RequestPayInfo>() {
           @Override
           public void write(JsonWriter out, DcdChargeSubmitV30RequestPayInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DcdChargeSubmitV30RequestPayInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of DcdChargeSubmitV30RequestPayInfo given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of DcdChargeSubmitV30RequestPayInfo
  * @throws IOException if the JSON string is invalid with respect to DcdChargeSubmitV30RequestPayInfo
  */
  public static DcdChargeSubmitV30RequestPayInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DcdChargeSubmitV30RequestPayInfo.class);
  }

 /**
  * Convert an instance of DcdChargeSubmitV30RequestPayInfo to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

