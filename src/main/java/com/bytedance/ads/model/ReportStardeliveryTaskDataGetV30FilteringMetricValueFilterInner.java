/*
 * Oceanengine Open Api
 * 巨量引擎开放平台 Open Api
 *
 * The version of the OpenAPI document: 1.1.52
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bytedance.ads.model;

import java.util.Objects;
import java.util.Arrays;
import com.bytedance.ads.model.ReportStardeliveryTaskDataGetV30FilteringMetricValueFilterOperator;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.bytedance.ads.JSON;

/**
 * ReportStardeliveryTaskDataGetV30FilteringMetricValueFilterInner
 */
@javax.annotation.Generated(value = "com.org.bytedance.ad_open_sdk.JavacusGenerator", date = "2025-05-16T11:39:28.293588012+08:00[Asia/Shanghai]")
public class ReportStardeliveryTaskDataGetV30FilteringMetricValueFilterInner {
  public static final String SERIALIZED_NAME_FIELD = "field";
  @SerializedName(SERIALIZED_NAME_FIELD)
  private String field = null;

  public static final String SERIALIZED_NAME_OPERATOR = "operator";
  @SerializedName(SERIALIZED_NAME_OPERATOR)
  private ReportStardeliveryTaskDataGetV30FilteringMetricValueFilterOperator operator = null;

  public static final String SERIALIZED_NAME_VALUES = "values";
  @SerializedName(SERIALIZED_NAME_VALUES)
  private List<Double> values = null;

  public ReportStardeliveryTaskDataGetV30FilteringMetricValueFilterInner() {
  }

  public ReportStardeliveryTaskDataGetV30FilteringMetricValueFilterInner field(String field) {
    
    this.field = field;
    return this;
  }

   /**
   * 
   * @return field
  **/
  @javax.annotation.Nullable
  public String getField() {
    return field;
  }


  public void setField(String field) {
    this.field = field;
  }


  public ReportStardeliveryTaskDataGetV30FilteringMetricValueFilterInner operator(ReportStardeliveryTaskDataGetV30FilteringMetricValueFilterOperator operator) {
    
    this.operator = operator;
    return this;
  }

   /**
   * Get operator
   * @return operator
  **/
  @javax.annotation.Nullable
  public ReportStardeliveryTaskDataGetV30FilteringMetricValueFilterOperator getOperator() {
    return operator;
  }


  public void setOperator(ReportStardeliveryTaskDataGetV30FilteringMetricValueFilterOperator operator) {
    this.operator = operator;
  }


  public ReportStardeliveryTaskDataGetV30FilteringMetricValueFilterInner values(List<Double> values) {
    
    this.values = values;
    return this;
  }

  public ReportStardeliveryTaskDataGetV30FilteringMetricValueFilterInner addValuesItem(Double valuesItem) {
    if (this.values == null) {
      this.values = new ArrayList<>();
    }
    this.values.add(valuesItem);
    return this;
  }

   /**
   * 
   * @return values
  **/
  @javax.annotation.Nullable
  public List<Double> getValues() {
    return values;
  }


  public void setValues(List<Double> values) {
    this.values = values;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReportStardeliveryTaskDataGetV30FilteringMetricValueFilterInner reportStardeliveryTaskDataGetV30FilteringMetricValueFilterInner = (ReportStardeliveryTaskDataGetV30FilteringMetricValueFilterInner) o;
    return Objects.equals(this.field, reportStardeliveryTaskDataGetV30FilteringMetricValueFilterInner.field) &&
        Objects.equals(this.operator, reportStardeliveryTaskDataGetV30FilteringMetricValueFilterInner.operator) &&
        Objects.equals(this.values, reportStardeliveryTaskDataGetV30FilteringMetricValueFilterInner.values);
  }

  @Override
  public int hashCode() {
    return Objects.hash(field, operator, values);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReportStardeliveryTaskDataGetV30FilteringMetricValueFilterInner {\n");
    sb.append("    field: ").append(toIndentedString(field)).append("\n");
    sb.append("    operator: ").append(toIndentedString(operator)).append("\n");
    sb.append("    values: ").append(toIndentedString(values)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("field");
    openapiFields.add("operator");
    openapiFields.add("values");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }


  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ReportStardeliveryTaskDataGetV30FilteringMetricValueFilterInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ReportStardeliveryTaskDataGetV30FilteringMetricValueFilterInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ReportStardeliveryTaskDataGetV30FilteringMetricValueFilterInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ReportStardeliveryTaskDataGetV30FilteringMetricValueFilterInner.class));

       return (TypeAdapter<T>) new TypeAdapter<ReportStardeliveryTaskDataGetV30FilteringMetricValueFilterInner>() {
           @Override
           public void write(JsonWriter out, ReportStardeliveryTaskDataGetV30FilteringMetricValueFilterInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ReportStardeliveryTaskDataGetV30FilteringMetricValueFilterInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ReportStardeliveryTaskDataGetV30FilteringMetricValueFilterInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ReportStardeliveryTaskDataGetV30FilteringMetricValueFilterInner
  * @throws IOException if the JSON string is invalid with respect to ReportStardeliveryTaskDataGetV30FilteringMetricValueFilterInner
  */
  public static ReportStardeliveryTaskDataGetV30FilteringMetricValueFilterInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ReportStardeliveryTaskDataGetV30FilteringMetricValueFilterInner.class);
  }

 /**
  * Convert an instance of ReportStardeliveryTaskDataGetV30FilteringMetricValueFilterInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

