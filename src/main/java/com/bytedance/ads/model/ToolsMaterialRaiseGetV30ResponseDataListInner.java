/*
 * Oceanengine Open Api
 * 巨量引擎开放平台 Open Api
 *
 * The version of the OpenAPI document: 1.1.71
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bytedance.ads.model;

import java.util.Objects;
import java.util.Arrays;
import com.bytedance.ads.model.ToolsMaterialRaiseGetV30DataListStatus;
import com.bytedance.ads.model.ToolsMaterialRaiseGetV30ResponseDataListInnerRaiseInfo;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.bytedance.ads.JSON;

/**
 * ToolsMaterialRaiseGetV30ResponseDataListInner
 */
@javax.annotation.Generated(value = "com.org.bytedance.ad_open_sdk.JavacusGenerator", date = "2025-09-26T11:43:14.561505336+08:00[Asia/Shanghai]")
public class ToolsMaterialRaiseGetV30ResponseDataListInner {
  public static final String SERIALIZED_NAME_MATERIAL_IDS = "material_ids";
  @SerializedName(SERIALIZED_NAME_MATERIAL_IDS)
  private List<Long> materialIds = null;

  public static final String SERIALIZED_NAME_PROJECT_ID = "project_id";
  @SerializedName(SERIALIZED_NAME_PROJECT_ID)
  private Long projectId = null;

  public static final String SERIALIZED_NAME_RAISE_INFO = "raise_info";
  @SerializedName(SERIALIZED_NAME_RAISE_INFO)
  private ToolsMaterialRaiseGetV30ResponseDataListInnerRaiseInfo raiseInfo = null;

  public static final String SERIALIZED_NAME_SCHEDULE_ID = "schedule_id";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_ID)
  private Long scheduleId = null;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private ToolsMaterialRaiseGetV30DataListStatus status = null;

  public ToolsMaterialRaiseGetV30ResponseDataListInner() {
  }

  public ToolsMaterialRaiseGetV30ResponseDataListInner materialIds(List<Long> materialIds) {
    
    this.materialIds = materialIds;
    return this;
  }

  public ToolsMaterialRaiseGetV30ResponseDataListInner addMaterialIdsItem(Long materialIdsItem) {
    if (this.materialIds == null) {
      this.materialIds = new ArrayList<>();
    }
    this.materialIds.add(materialIdsItem);
    return this;
  }

   /**
   * 
   * @return materialIds
  **/
  @javax.annotation.Nullable
  public List<Long> getMaterialIds() {
    return materialIds;
  }


  public void setMaterialIds(List<Long> materialIds) {
    this.materialIds = materialIds;
  }


  public ToolsMaterialRaiseGetV30ResponseDataListInner projectId(Long projectId) {
    
    this.projectId = projectId;
    return this;
  }

   /**
   * 
   * @return projectId
  **/
  @javax.annotation.Nullable
  public Long getProjectId() {
    return projectId;
  }


  public void setProjectId(Long projectId) {
    this.projectId = projectId;
  }


  public ToolsMaterialRaiseGetV30ResponseDataListInner raiseInfo(ToolsMaterialRaiseGetV30ResponseDataListInnerRaiseInfo raiseInfo) {
    
    this.raiseInfo = raiseInfo;
    return this;
  }

   /**
   * Get raiseInfo
   * @return raiseInfo
  **/
  @javax.annotation.Nullable
  public ToolsMaterialRaiseGetV30ResponseDataListInnerRaiseInfo getRaiseInfo() {
    return raiseInfo;
  }


  public void setRaiseInfo(ToolsMaterialRaiseGetV30ResponseDataListInnerRaiseInfo raiseInfo) {
    this.raiseInfo = raiseInfo;
  }


  public ToolsMaterialRaiseGetV30ResponseDataListInner scheduleId(Long scheduleId) {
    
    this.scheduleId = scheduleId;
    return this;
  }

   /**
   * 
   * @return scheduleId
  **/
  @javax.annotation.Nullable
  public Long getScheduleId() {
    return scheduleId;
  }


  public void setScheduleId(Long scheduleId) {
    this.scheduleId = scheduleId;
  }


  public ToolsMaterialRaiseGetV30ResponseDataListInner status(ToolsMaterialRaiseGetV30DataListStatus status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  public ToolsMaterialRaiseGetV30DataListStatus getStatus() {
    return status;
  }


  public void setStatus(ToolsMaterialRaiseGetV30DataListStatus status) {
    this.status = status;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ToolsMaterialRaiseGetV30ResponseDataListInner toolsMaterialRaiseGetV30ResponseDataListInner = (ToolsMaterialRaiseGetV30ResponseDataListInner) o;
    return Objects.equals(this.materialIds, toolsMaterialRaiseGetV30ResponseDataListInner.materialIds) &&
        Objects.equals(this.projectId, toolsMaterialRaiseGetV30ResponseDataListInner.projectId) &&
        Objects.equals(this.raiseInfo, toolsMaterialRaiseGetV30ResponseDataListInner.raiseInfo) &&
        Objects.equals(this.scheduleId, toolsMaterialRaiseGetV30ResponseDataListInner.scheduleId) &&
        Objects.equals(this.status, toolsMaterialRaiseGetV30ResponseDataListInner.status);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(materialIds, projectId, raiseInfo, scheduleId, status);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ToolsMaterialRaiseGetV30ResponseDataListInner {\n");
    sb.append("    materialIds: ").append(toIndentedString(materialIds)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    raiseInfo: ").append(toIndentedString(raiseInfo)).append("\n");
    sb.append("    scheduleId: ").append(toIndentedString(scheduleId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("material_ids");
    openapiFields.add("project_id");
    openapiFields.add("raise_info");
    openapiFields.add("schedule_id");
    openapiFields.add("status");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }


  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ToolsMaterialRaiseGetV30ResponseDataListInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ToolsMaterialRaiseGetV30ResponseDataListInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ToolsMaterialRaiseGetV30ResponseDataListInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ToolsMaterialRaiseGetV30ResponseDataListInner.class));

       return (TypeAdapter<T>) new TypeAdapter<ToolsMaterialRaiseGetV30ResponseDataListInner>() {
           @Override
           public void write(JsonWriter out, ToolsMaterialRaiseGetV30ResponseDataListInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ToolsMaterialRaiseGetV30ResponseDataListInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ToolsMaterialRaiseGetV30ResponseDataListInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ToolsMaterialRaiseGetV30ResponseDataListInner
  * @throws IOException if the JSON string is invalid with respect to ToolsMaterialRaiseGetV30ResponseDataListInner
  */
  public static ToolsMaterialRaiseGetV30ResponseDataListInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ToolsMaterialRaiseGetV30ResponseDataListInner.class);
  }

 /**
  * Convert an instance of ToolsMaterialRaiseGetV30ResponseDataListInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

