/*
 * Oceanengine Open Api
 * 巨量引擎开放平台 Open Api
 *
 * The version of the OpenAPI document: 1.1.54
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bytedance.ads.model;

import java.util.Objects;
import java.util.Arrays;
import com.bytedance.ads.model.AgentChargeVerifyV2DataChargeContractListAllowDeliveryTypeList;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.bytedance.ads.JSON;

/**
 * AgentChargeVerifyV2ResponseDataChargeContractListInner
 */
@javax.annotation.Generated(value = "com.org.bytedance.ad_open_sdk.JavacusGenerator", date = "2025-05-28T16:24:36.604742520+08:00[Asia/Shanghai]")
public class AgentChargeVerifyV2ResponseDataChargeContractListInner {
  public static final String SERIALIZED_NAME_ALLOW_DELIVERY_TYPE_LIST = "allow_delivery_type_list";
  @SerializedName(SERIALIZED_NAME_ALLOW_DELIVERY_TYPE_LIST)
  private List<AgentChargeVerifyV2DataChargeContractListAllowDeliveryTypeList> allowDeliveryTypeList = null;

  public static final String SERIALIZED_NAME_CONT_BEGIN_DATE = "cont_begin_date";
  @SerializedName(SERIALIZED_NAME_CONT_BEGIN_DATE)
  private String contBeginDate = null;

  public static final String SERIALIZED_NAME_CONT_END_DATE = "cont_end_date";
  @SerializedName(SERIALIZED_NAME_CONT_END_DATE)
  private String contEndDate = null;

  public static final String SERIALIZED_NAME_CONTRACT_ID = "contract_id";
  @SerializedName(SERIALIZED_NAME_CONTRACT_ID)
  private Long contractId = null;

  public static final String SERIALIZED_NAME_CONTRACT_NAME = "contract_name";
  @SerializedName(SERIALIZED_NAME_CONTRACT_NAME)
  private String contractName = null;

  public static final String SERIALIZED_NAME_CONTRACT_SERIAL = "contract_serial";
  @SerializedName(SERIALIZED_NAME_CONTRACT_SERIAL)
  private String contractSerial = null;

  public static final String SERIALIZED_NAME_CUSTOMER_NAME = "customer_name";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_NAME)
  private String customerName = null;

  public static final String SERIALIZED_NAME_SUBJECT_NAME = "subject_name";
  @SerializedName(SERIALIZED_NAME_SUBJECT_NAME)
  private String subjectName = null;

  public AgentChargeVerifyV2ResponseDataChargeContractListInner() {
  }

  public AgentChargeVerifyV2ResponseDataChargeContractListInner allowDeliveryTypeList(List<AgentChargeVerifyV2DataChargeContractListAllowDeliveryTypeList> allowDeliveryTypeList) {
    
    this.allowDeliveryTypeList = allowDeliveryTypeList;
    return this;
  }

  public AgentChargeVerifyV2ResponseDataChargeContractListInner addAllowDeliveryTypeListItem(AgentChargeVerifyV2DataChargeContractListAllowDeliveryTypeList allowDeliveryTypeListItem) {
    if (this.allowDeliveryTypeList == null) {
      this.allowDeliveryTypeList = new ArrayList<>();
    }
    this.allowDeliveryTypeList.add(allowDeliveryTypeListItem);
    return this;
  }

   /**
   * 允许的资金池投放方式
   * @return allowDeliveryTypeList
  **/
  @javax.annotation.Nullable
  public List<AgentChargeVerifyV2DataChargeContractListAllowDeliveryTypeList> getAllowDeliveryTypeList() {
    return allowDeliveryTypeList;
  }


  public void setAllowDeliveryTypeList(List<AgentChargeVerifyV2DataChargeContractListAllowDeliveryTypeList> allowDeliveryTypeList) {
    this.allowDeliveryTypeList = allowDeliveryTypeList;
  }


  public AgentChargeVerifyV2ResponseDataChargeContractListInner contBeginDate(String contBeginDate) {
    
    this.contBeginDate = contBeginDate;
    return this;
  }

   /**
   * 合同生效时间，格式：yyyy-MM-dd
   * @return contBeginDate
  **/
  @javax.annotation.Nullable
  public String getContBeginDate() {
    return contBeginDate;
  }


  public void setContBeginDate(String contBeginDate) {
    this.contBeginDate = contBeginDate;
  }


  public AgentChargeVerifyV2ResponseDataChargeContractListInner contEndDate(String contEndDate) {
    
    this.contEndDate = contEndDate;
    return this;
  }

   /**
   * 合同结束时间，格式：yyyy-MM-dd
   * @return contEndDate
  **/
  @javax.annotation.Nullable
  public String getContEndDate() {
    return contEndDate;
  }


  public void setContEndDate(String contEndDate) {
    this.contEndDate = contEndDate;
  }


  public AgentChargeVerifyV2ResponseDataChargeContractListInner contractId(Long contractId) {
    
    this.contractId = contractId;
    return this;
  }

   /**
   * 合同ID
   * @return contractId
  **/
  @javax.annotation.Nullable
  public Long getContractId() {
    return contractId;
  }


  public void setContractId(Long contractId) {
    this.contractId = contractId;
  }


  public AgentChargeVerifyV2ResponseDataChargeContractListInner contractName(String contractName) {
    
    this.contractName = contractName;
    return this;
  }

   /**
   * 合同名称
   * @return contractName
  **/
  @javax.annotation.Nullable
  public String getContractName() {
    return contractName;
  }


  public void setContractName(String contractName) {
    this.contractName = contractName;
  }


  public AgentChargeVerifyV2ResponseDataChargeContractListInner contractSerial(String contractSerial) {
    
    this.contractSerial = contractSerial;
    return this;
  }

   /**
   * 合同编号
   * @return contractSerial
  **/
  @javax.annotation.Nullable
  public String getContractSerial() {
    return contractSerial;
  }


  public void setContractSerial(String contractSerial) {
    this.contractSerial = contractSerial;
  }


  public AgentChargeVerifyV2ResponseDataChargeContractListInner customerName(String customerName) {
    
    this.customerName = customerName;
    return this;
  }

   /**
   * 代理商客户名称
   * @return customerName
  **/
  @javax.annotation.Nullable
  public String getCustomerName() {
    return customerName;
  }


  public void setCustomerName(String customerName) {
    this.customerName = customerName;
  }


  public AgentChargeVerifyV2ResponseDataChargeContractListInner subjectName(String subjectName) {
    
    this.subjectName = subjectName;
    return this;
  }

   /**
   * 签约主体名称
   * @return subjectName
  **/
  @javax.annotation.Nullable
  public String getSubjectName() {
    return subjectName;
  }


  public void setSubjectName(String subjectName) {
    this.subjectName = subjectName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AgentChargeVerifyV2ResponseDataChargeContractListInner agentChargeVerifyV2ResponseDataChargeContractListInner = (AgentChargeVerifyV2ResponseDataChargeContractListInner) o;
    return Objects.equals(this.allowDeliveryTypeList, agentChargeVerifyV2ResponseDataChargeContractListInner.allowDeliveryTypeList) &&
        Objects.equals(this.contBeginDate, agentChargeVerifyV2ResponseDataChargeContractListInner.contBeginDate) &&
        Objects.equals(this.contEndDate, agentChargeVerifyV2ResponseDataChargeContractListInner.contEndDate) &&
        Objects.equals(this.contractId, agentChargeVerifyV2ResponseDataChargeContractListInner.contractId) &&
        Objects.equals(this.contractName, agentChargeVerifyV2ResponseDataChargeContractListInner.contractName) &&
        Objects.equals(this.contractSerial, agentChargeVerifyV2ResponseDataChargeContractListInner.contractSerial) &&
        Objects.equals(this.customerName, agentChargeVerifyV2ResponseDataChargeContractListInner.customerName) &&
        Objects.equals(this.subjectName, agentChargeVerifyV2ResponseDataChargeContractListInner.subjectName);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowDeliveryTypeList, contBeginDate, contEndDate, contractId, contractName, contractSerial, customerName, subjectName);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AgentChargeVerifyV2ResponseDataChargeContractListInner {\n");
    sb.append("    allowDeliveryTypeList: ").append(toIndentedString(allowDeliveryTypeList)).append("\n");
    sb.append("    contBeginDate: ").append(toIndentedString(contBeginDate)).append("\n");
    sb.append("    contEndDate: ").append(toIndentedString(contEndDate)).append("\n");
    sb.append("    contractId: ").append(toIndentedString(contractId)).append("\n");
    sb.append("    contractName: ").append(toIndentedString(contractName)).append("\n");
    sb.append("    contractSerial: ").append(toIndentedString(contractSerial)).append("\n");
    sb.append("    customerName: ").append(toIndentedString(customerName)).append("\n");
    sb.append("    subjectName: ").append(toIndentedString(subjectName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("allow_delivery_type_list");
    openapiFields.add("cont_begin_date");
    openapiFields.add("cont_end_date");
    openapiFields.add("contract_id");
    openapiFields.add("contract_name");
    openapiFields.add("contract_serial");
    openapiFields.add("customer_name");
    openapiFields.add("subject_name");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }


  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AgentChargeVerifyV2ResponseDataChargeContractListInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AgentChargeVerifyV2ResponseDataChargeContractListInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AgentChargeVerifyV2ResponseDataChargeContractListInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AgentChargeVerifyV2ResponseDataChargeContractListInner.class));

       return (TypeAdapter<T>) new TypeAdapter<AgentChargeVerifyV2ResponseDataChargeContractListInner>() {
           @Override
           public void write(JsonWriter out, AgentChargeVerifyV2ResponseDataChargeContractListInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AgentChargeVerifyV2ResponseDataChargeContractListInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AgentChargeVerifyV2ResponseDataChargeContractListInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AgentChargeVerifyV2ResponseDataChargeContractListInner
  * @throws IOException if the JSON string is invalid with respect to AgentChargeVerifyV2ResponseDataChargeContractListInner
  */
  public static AgentChargeVerifyV2ResponseDataChargeContractListInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AgentChargeVerifyV2ResponseDataChargeContractListInner.class);
  }

 /**
  * Convert an instance of AgentChargeVerifyV2ResponseDataChargeContractListInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

